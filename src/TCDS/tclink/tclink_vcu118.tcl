
#*****************************************************************************************
# Vivado (TM) v2019.1.3 (64-bit)
#
# tclink_vcu118.tcl: Tcl script for re-creating project 'tclink_vcu118'
#
# Generated by Vivado on Wed Aug 19 14:01:37 +0200 2020
# IP Build 2633630 on Wed Sep  4 12:30:14 MDT 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (tclink_vcu118.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/vio_control/vio_control_vcu118/vio_control_vcu118.xci"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink_mmcm/mmcme4/mmcme4.xci"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink_mmcm/mmcme4_slave/mmcme4_slave.xci"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_add_4.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_add_5.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_multBy2_4.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_multBy2_5.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_multBy3_4.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_multBy3_5.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/ip_mgt_timing/gtwizard_ultrascale_v1_7_gtye4_common.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/ip_mgt_timing/gty_master_timing_gtye4_common_wrapper.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/rs_encoder_N15K13.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/rs_encoder_N31K29.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/scrambler51bitOrder49.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/scrambler53bitOrder49.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/scrambler58bitOrder58.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/scrambler60bitOrder58.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkDataSelect.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkFECEncoder.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkInterleaver.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkScrambler.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkTxDataPath.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkTxGearBox.v"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/common/bit_synchronizer.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/cdc_user/cdc_rx.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/cdc_user/cdc_tx.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_controller/dco_controller.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/lpgbtfpga_package.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_51bitOrder49.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_53bitOrder49.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_58bitOrder58.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_60bitOrder58.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_phase_detector/dmtd_phase_meas.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_phase_detector/dmtd_with_deglitcher.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/mgt_fixed_phase/drp_arbiter.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/fec_rsDecoderN15K13.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/fec_rsDecoderN31K29.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/fifo_fill_level_acc.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_phase_detector/gc_extend_pulse.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_phase_detector/gc_pulse_synchronizer.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_phase_detector/gc_sync_ffs.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fe/lpgbt_fe_tx.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_decoder.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_deinterleaver.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_descrambler.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_framealigner.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_rxgearbox.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/lpgbt-fpga/lpgbtfpga_uplink.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/master_rx_slide_compensation.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/mgt_fixed_phase/mgt_fixed_phase.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/mgt_user_clock.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_controller/phase_offset_removal.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_controller/pi_controller.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/hprbs_framing/prbs_chk.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/datapath/hprbs_framing/prbs_gen.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/common/reset_synchronizer.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_controller/scaler.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_controller/sigma_delta_modulator.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink_lpgbt_pkg.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_channel_controller.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_controller/tclink_controller.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink_lpgbt.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/tclink/tclink_tester/tclink_tester_unit.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/tx_phase_aligner.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/tx_phase_aligner_fsm.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/tx_pi_ctrl.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/system_wrapper_vcu118.vhd"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/ip_mgt_timing/gtye4_master_timing_10g/gtye4_master_timing_10g.xci"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/ip_mgt_timing/gtye4_slave_timing_10g/gtye4_slave_timing_10g.xci"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/ip_mgt_timing/gtye4_master_timing_5g/gtye4_master_timing_5g.xci"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/source/transceiver/ip_mgt_timing/gtye4_slave_timing_5g/gtye4_slave_timing_5g.xci"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/constrs/mgt_locs.xdc"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/constrs/system_physical_vcu118.xdc"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/constrs/system_timing_vcu118.xdc"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/constrs/core_lpgbt_symmetric_timing.xdc"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/constrs/master_timing.xdc"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/constrs/slave_physical_gtye4.xdc"
#    "C:/HPTD/TCLINK_FINAL/tclink/firmware/constrs/mgt_messages.tcl"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "tclink_vcu118"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "tclink_vcu118.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/tclink_vcu118"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcvu9p-flga2104-2L-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "corecontainer.enable" -value "1" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.board_id" -value "vcu118" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_core_container" -value "1" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcvu9p-flga2104-2L-e" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "46" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "46" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "46" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "46" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "46" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "46" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "2" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "46" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "22" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/firmware/source/vio_control/vio_control_vcu118/vio_control_vcu118.xci"] \
 [file normalize "${origin_dir}/firmware/source/tclink_mmcm/mmcme4/mmcme4.xci"] \
 [file normalize "${origin_dir}/firmware/source/tclink_mmcm/mmcme4_slave/mmcme4_slave.xci"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_add_4.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_add_5.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_multBy2_4.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_multBy2_5.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_multBy3_4.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/gf_multBy3_5.v"] \
 [file normalize "${origin_dir}/firmware/source/transceiver/ip_mgt_timing/gtwizard_ultrascale_v1_7_gtye4_common.v"] \
 [file normalize "${origin_dir}/firmware/source/transceiver/ip_mgt_timing/gty_master_timing_gtye4_common_wrapper.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/rs_encoder_N15K13.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/rs_encoder_N31K29.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/scrambler51bitOrder49.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/scrambler53bitOrder49.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/scrambler58bitOrder58.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/scrambler60bitOrder58.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkDataSelect.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkFECEncoder.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkInterleaver.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkScrambler.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkTxDataPath.v"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt-fe/upLinkTxGearBox.v"] \
 [file normalize "${origin_dir}/firmware/source/common/bit_synchronizer.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/cdc_user/cdc_rx.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/cdc_user/cdc_tx.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_controller/dco_controller.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/lpgbtfpga_package.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_51bitOrder49.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_53bitOrder49.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_58bitOrder58.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_60bitOrder58.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_phase_detector/dmtd_phase_meas.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_phase_detector/dmtd_with_deglitcher.vhd"] \
 [file normalize "${origin_dir}/firmware/source/transceiver/mgt_fixed_phase/drp_arbiter.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/fec_rsDecoderN15K13.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/fec_rsDecoderN31K29.vhd"] \
 [file normalize "${origin_dir}/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/fifo_fill_level_acc.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_phase_detector/gc_extend_pulse.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_phase_detector/gc_pulse_synchronizer.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_phase_detector/gc_sync_ffs.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fe/lpgbt_fe_tx.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_decoder.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_deinterleaver.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_descrambler.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_framealigner.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_rxgearbox.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/lpgbt-fpga/lpgbtfpga_uplink.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/master_rx_slide_compensation.vhd"] \
 [file normalize "${origin_dir}/firmware/source/transceiver/mgt_fixed_phase/mgt_fixed_phase.vhd"] \
 [file normalize "${origin_dir}/firmware/source/transceiver/mgt_user_clock.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_controller/phase_offset_removal.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_controller/pi_controller.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/hprbs_framing/prbs_chk.vhd"] \
 [file normalize "${origin_dir}/firmware/source/datapath/hprbs_framing/prbs_gen.vhd"] \
 [file normalize "${origin_dir}/firmware/source/common/reset_synchronizer.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_controller/scaler.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_controller/sigma_delta_modulator.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink_lpgbt_pkg.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_channel_controller.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_controller/tclink_controller.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink_lpgbt.vhd"] \
 [file normalize "${origin_dir}/firmware/source/tclink/tclink_tester/tclink_tester_unit.vhd"] \
 [file normalize "${origin_dir}/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/tx_phase_aligner.vhd"] \
 [file normalize "${origin_dir}/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/tx_phase_aligner_fsm.vhd"] \
 [file normalize "${origin_dir}/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/tx_pi_ctrl.vhd"] \
 [file normalize "${origin_dir}/firmware/source/system_wrapper_vcu118.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/firmware/source/vio_control/vio_control_vcu118/vio_control_vcu118.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/firmware/source/tclink_mmcm/mmcme4/mmcme4.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/firmware/source/tclink_mmcm/mmcme4_slave/mmcme4_slave.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/firmware/source/common/bit_synchronizer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/cdc_user/cdc_rx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/cdc_user/cdc_tx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_controller/dco_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/lpgbtfpga_package.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_51bitOrder49.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_53bitOrder49.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_58bitOrder58.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/descrambler_60bitOrder58.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_phase_detector/dmtd_phase_meas.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_phase_detector/dmtd_with_deglitcher.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/transceiver/mgt_fixed_phase/drp_arbiter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/fec_rsDecoderN15K13.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/fec_rsDecoderN31K29.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/fifo_fill_level_acc.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_phase_detector/gc_extend_pulse.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_phase_detector/gc_pulse_synchronizer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_phase_detector/gc_sync_ffs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fe/lpgbt_fe_tx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_decoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_deinterleaver.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_descrambler.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_framealigner.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/uplink/lpgbtfpga_rxgearbox.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/lpgbt-fpga/lpgbtfpga_uplink.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/master_rx_slide_compensation.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/transceiver/mgt_fixed_phase/mgt_fixed_phase.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/transceiver/mgt_user_clock.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_controller/phase_offset_removal.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_controller/pi_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/hprbs_framing/prbs_chk.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/datapath/hprbs_framing/prbs_gen.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/common/reset_synchronizer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_controller/scaler.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_controller/sigma_delta_modulator.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink_lpgbt_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_channel_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_controller/tclink_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink_lpgbt.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/tclink/tclink_tester/tclink_tester_unit.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/tx_phase_aligner.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/tx_phase_aligner_fsm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/transceiver/mgt_fixed_phase/hptd_ip_core/tx_pi_ctrl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/firmware/source/system_wrapper_vcu118.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "system_wrapper_vcu118" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/firmware/source/transceiver/ip_mgt_timing/gtye4_master_timing_10g/gtye4_master_timing_10g.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/firmware/source/transceiver/ip_mgt_timing/gtye4_master_timing_10g/gtye4_master_timing_10g.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/firmware/source/transceiver/ip_mgt_timing/gtye4_slave_timing_10g/gtye4_slave_timing_10g.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/firmware/source/transceiver/ip_mgt_timing/gtye4_slave_timing_10g/gtye4_slave_timing_10g.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/firmware/source/transceiver/ip_mgt_timing/gtye4_master_timing_5g/gtye4_master_timing_5g.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/firmware/source/transceiver/ip_mgt_timing/gtye4_master_timing_5g/gtye4_master_timing_5g.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/firmware/source/transceiver/ip_mgt_timing/gtye4_slave_timing_5g/gtye4_slave_timing_5g.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/firmware/source/transceiver/ip_mgt_timing/gtye4_slave_timing_5g/gtye4_slave_timing_5g.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/firmware/constrs/mgt_locs.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/firmware/constrs/mgt_locs.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/firmware/constrs/system_physical_vcu118.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/firmware/constrs/system_physical_vcu118.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/firmware/constrs/system_timing_vcu118.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/firmware/constrs/system_timing_vcu118.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/firmware/constrs/core_lpgbt_symmetric_timing.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/firmware/constrs/core_lpgbt_symmetric_timing.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/firmware/constrs/master_timing.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/firmware/constrs/master_timing.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/firmware/constrs/slave_physical_gtye4.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/firmware/constrs/slave_physical_gtye4.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/firmware/constrs/system_physical_vcu118.xdc"]" -objects $obj
set_property -name "target_part" -value "xcvu9p-flga2104-2L-e" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/firmware/constrs/system_physical_vcu118.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "nl.mode" -value "funcsim" -objects $obj
set_property -name "top" -value "system_wrapper_vcu118" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
set files [list \
[file normalize "$origin_dir/firmware/constrs/mgt_messages.tcl"]]
add_files -norecurse -fileset $obj $files

# Set 'utils_1' fileset file properties for remote files
set file "$origin_dir/firmware/constrs/mgt_messages.tcl"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "file_type" -value "TCL" -objects $file_obj

# Set 'utils_1' fileset file properties for local files
# None

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xcvu9p-flga2104-2L-e" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj
set_property -name "steps.synth_design.args.flatten_hierarchy" -value "none" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcvu9p-flga2104-2L-e" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.init_design.tcl.pre" -value "[file normalize "$origin_dir/firmware/constrs/mgt_messages.tcl"]" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# ------------------------------- Synthesis to P&R
# Enable assertion evaluation
set_property STEPS.SYNTH_DESIGN.ARGS.ASSERT true [get_runs synth_1]
update_compile_order -fileset sources_1
launch_runs impl_1 -to_step write_bitstream -jobs 4
wait_on_run impl_1

set stat_synth [get_property STATUS [get_runs synth_1]]
set stat_impl [get_property STATUS [get_runs impl_1]]

if {${stat_synth} != "synth_design Complete!"} {
    puts "ERROR: Synthesis failed"
    exit 1
}

if {${stat_impl} != "write_bitstream Complete!"} {
    puts "ERROR: Implementation failed"
    exit 1
}

puts "INFO: Built project ${_xil_proj_name_}"
exit 0
