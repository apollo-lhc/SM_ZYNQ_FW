From 91d379ef15d2444540da27a724d4bca250b81d06 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 13 Jul 2020 16:00:59 -0400
Subject: [PATCH 3/3] dummy

---
 arch/arm/mm/fault.c      | 30 ++++++++++++++++++++++++++++++
 arch/arm/mm/fsr-2level.c |  2 +-
 2 files changed, 31 insertions(+), 1 deletion(-)

diff --git a/arch/arm/mm/fault.c b/arch/arm/mm/fault.c
index d400d1c..a314256 100644
--- a/arch/arm/mm/fault.c
+++ b/arch/arm/mm/fault.c
@@ -540,6 +540,16 @@ static inline bool access_error(unsigned int fsr, struct vm_area_struct *vma)
 	return 1;
 }
 
+
+/*
+ * This abort handler returns no fault, but also calls arm_notifiy_die
+ * Forward declaration here
+ */
+static int
+do_ignore(unsigned long addr, unsigned int fsr, struct pt_regs *regs);
+
+
+
 struct fsr_info {
 	int	(*fn)(unsigned long addr, unsigned int fsr, struct pt_regs *regs);
 	int	sig;
@@ -590,6 +600,26 @@ struct fsr_info {
 	arm_notify_die("", regs, &info, fsr, 0);
 }
 
+/*
+ * This abort handler returns no fault, but also calls arm_notifiy_die
+ * forward declaration above
+ */
+static int
+do_ignore(unsigned long addr, unsigned int fsr, struct pt_regs *regs)
+{
+  //Taken from do_DataAbort()
+  const struct fsr_info *inf = fsr_info + fsr_fs(fsr);
+  struct siginfo info;
+  info.si_signo = inf->sig;
+  info.si_errno = 0;
+  info.si_code  = inf->code;
+  info.si_addr  = (void __user *)addr;
+  arm_notify_die("", regs, &info, fsr, 0);
+  
+  return 0;
+}
+
+
 void __init
 hook_ifault_code(int nr, int (*fn)(unsigned long, unsigned int, struct pt_regs *),
 		 int sig, int code, const char *name)
diff --git a/arch/arm/mm/fsr-2level.c b/arch/arm/mm/fsr-2level.c
index 2fd4053..efa68bb 100644
--- a/arch/arm/mm/fsr-2level.c
+++ b/arch/arm/mm/fsr-2level.c
@@ -12,7 +12,7 @@
 	{ do_translation_fault,	SIGSEGV, SEGV_MAPERR,	"section translation fault"	   },
 	{ do_bad,		SIGBUS,	 0,		"external abort on linefetch"	   },
 	{ do_page_fault,	SIGSEGV, SEGV_MAPERR,	"page translation fault"	   },
-	{ do_bad,		SIGBUS,	 0,		"external abort on non-linefetch"  },
+	{ do_ignore,		SIGBUS,	 0,		"external abort on non-linefetch. Hi Dan!"  },
 	{ do_bad,		SIGSEGV, SEGV_ACCERR,	"section domain fault"		   },
 	{ do_bad,		SIGBUS,	 0,		"external abort on non-linefetch"  },
 	{ do_bad,		SIGSEGV, SEGV_ACCERR,	"page domain fault"		   },
-- 
1.8.3.1

