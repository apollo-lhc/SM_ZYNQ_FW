From fa56b69267a54183eea9c1cd88e943eed67877b1 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Fri, 14 May 2021 15:13:36 -0400
Subject: [PATCH 01/31] code for apollo si programming

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c     |   2 +
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 169 ++++++++++++++++++
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h |  24 +++
 3 files changed, 195 insertions(+)
 create mode 100644 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
 create mode 100644 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
index 80a1314203..fcde6a4530 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
@@ -29,6 +29,7 @@
 #include "xfsbl_hw.h"
 #include "xfsbl_hooks.h"
 #include "psu_init.h"
+#include "xfsbl_programSI.h"
 /************************** Constant Definitions *****************************/
 
 /**************************** Type Definitions *******************************/
@@ -93,6 +94,7 @@ u32 XFsbl_HookBeforeFallback(void)
 	/**
 	 * Add the code here
 	 */
+	ProgramSI();
 
 	return Status;
 }
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
new file mode 100644
index 0000000000..797c9d205a
--- /dev/null
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -0,0 +1,169 @@
+#include "xfsbl_programSI.h"
+
+#define PRINTF XFsbl_Printf
+
+#define SI_I2C_ADDRESS   0xD0
+#define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
+#define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
+#define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
+#define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
+#define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
+#define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
+
+/*
+I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + 0x118))
+I2C_CONTROL      (SI_I2C_BASE_ADDR + 0x100))
+I2C_STATUS       (SI_I2C_BASE_ADDR + 0x104))
+I2C_RX_FIFO      (SI_I2C_BASE_ADDR + 0x10C))
+I2C_TX_FIFO      (SI_I2C_BASE_ADDR + 0x108))
+I2C_RESET        (SI_I2C_BASE_ADDR + 0x040))
+*/
+
+u16 ConfigData[] = {
+  0x010B, //0xb
+  0x24C0, 0x2500,
+  0x0105, //0x5
+  0x4001,
+  0x0100, //0x0
+  0x0600, 0x0700, 0x0800, 0x0B68, 0x1602, 0x17DC, 0x18EE, 0x19DD,
+  0x1ADF, 0x2B02, 0x2C01, 0x2D01, 0x2E38, 0x2F00, 0x3000, 0x3100,
+  0x3200, 0x3300, 0x3400, 0x3500, 0x3638, 0x3700, 0x3800, 0x3900,
+  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3F11, 0x4004, 0x410D, 0x4200,
+  0x4300, 0x4400, 0x450C, 0x4632, 0x4700, 0x4800, 0x4900, 0x4A32,
+  0x4B00, 0x4C00, 0x4D00, 0x4E05, 0x4F00, 0x500F, 0x5103, 0x5200,
+  0x5300, 0x5400, 0x5503, 0x5600, 0x5700, 0x5800, 0x5901, 0x5AAA,
+  0x5BAA, 0x5C0A, 0x5D01, 0x5E00, 0x5F00, 0x6000, 0x6100, 0x6200,
+  0x6300, 0x6400, 0x6500, 0x6600, 0x6700, 0x6800, 0x6900, 0x9202,
+  0x93A0, 0x9500, 0x9680, 0x9860, 0x9A02, 0x9B60, 0x9D08, 0x9E40,
+  0xA020, 0xA200, 0xA9A7, 0xAA61, 0xAB00, 0xAC00, 0xE521, 0xEA0A,
+  0xEB60, 0xEC00, 0xED00,
+  0x0101, //0x1
+  0x0201, 0x1202, 0x1309, 0x1433, 0x1508, 0x1702, 0x1809, 0x1933,
+  0x1A08, 0x2602, 0x2709, 0x2833, 0x2909, 0x2B02, 0x2C09, 0x2D33,
+  0x2E0A, 0x3F00, 0x4000, 0x4140, 0x42FF,
+  0x0102, //0x2
+  0x0600, 0x0832, 0x0900, 0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E01,
+  0x0F00, 0x1000, 0x1100, 0x1200, 0x1300, 0x1400, 0x1500, 0x1600,
+  0x1700, 0x1800, 0x1900, 0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00,
+  0x1F00, 0x2000, 0x2100, 0x2200, 0x2300, 0x2400, 0x2500, 0x2600,
+  0x2700, 0x2800, 0x2900, 0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00,
+  0x2F00, 0x310B, 0x320B, 0x330B, 0x340B, 0x3500, 0x3600, 0x3700,
+  0x38C0, 0x39DA, 0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3EC0, 0x5003,
+  0x5100, 0x5200, 0x5304, 0x5400, 0x5500, 0x5C02, 0x5D00, 0x5E00,
+  0x5F02, 0x6000, 0x6100, 0x6B41, 0x6C50, 0x6D4F, 0x6E4C, 0x6F4C,
+  0x704F, 0x7153, 0x724D, 0x8A00, 0x8B00, 0x8C00, 0x8D00, 0x8E00,
+  0x8F00, 0x9000, 0x9100, 0x94B0, 0x9602, 0x9702, 0x9902, 0x9DFA,
+  0x9E01, 0x9F00, 0xA9CC, 0xAA04, 0xAB00, 0xB7FF, 0x0103, 0x0200,
+  0x0300, 0x0400, 0x0500, 0x0607, 0x0700, 0x0800, 0x0900, 0x0A00,
+  0x0B80, 0x0C00, 0x0D00, 0x0E00, 0x0FEC, 0x1060, 0x1121, 0x1200,
+  0x1300, 0x14B8, 0x15C6, 0x1692, 0x1700, 0x1800, 0x19C0, 0x1A49,
+  0x1B6E, 0x1C0A, 0x1D00, 0x1E00, 0x1F8B, 0x2077, 0x21B7, 0x2200,
+  0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900, 0x2A00,
+  0x2B00, 0x2C00, 0x2D00, 0x3800, 0x391F, 0x3B00, 0x3C00, 0x3D00,
+  0x3E00, 0x3F00, 0x4000, 0x4100, 0x4200, 0x4300, 0x4400, 0x4500,
+  0x4600, 0x4700, 0x4800, 0x4900, 0x4A00, 0x4B00, 0x4C00, 0x4D00,
+  0x4E00, 0x4F00, 0x5000, 0x5100, 0x5200, 0x5900, 0x5A00, 0x5B00,
+  0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000,
+  0x0104, //0x4
+  0x8700,
+  0x0105, //0x5
+  0x0813, 0x0922, 0x0A0C, 0x0B0B, 0x0C07, 0x0D3F, 0x0E16, 0x0F2A, 
+  0x1009, 0x1108, 0x1207, 0x133F, 0x1500, 0x1600, 0x1700, 0x1800,
+  0x19BC, 0x1A02, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F80, 0x212B,
+  0x2A01, 0x2B01, 0x2C87, 0x2D03, 0x2E19, 0x2F19, 0x3100, 0x3242,
+  0x3303, 0x3400, 0x3500, 0x3604, 0x3700, 0x3800, 0x3900, 0x3A02,
+  0x3B03, 0x3C00, 0x3D11, 0x3E06, 0x890D, 0x8A00, 0x9BFA, 0x9D13,
+  0x9E24, 0x9F0C, 0xA00B, 0xA107, 0xA23F, 0xA603,
+  0x0108, //0x8
+  0x0235, 0x0305, 0x0400, 0x0500, 0x0600, 0x0700, 0x0800, 0x0900,
+  0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E00, 0x0F00, 0x1000, 0x1100,
+  0x1200, 0x1300, 0x1400, 0x1500, 0x1600, 0x1700, 0x1800, 0x1900,
+  0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F00, 0x2000, 0x2100,
+  0x2200, 0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900,
+  0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00, 0x2F00, 0x3000, 0x3100,
+  0x3200, 0x3300, 0x3400, 0x3500, 0x3600, 0x3700, 0x3800, 0x3900,
+  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3E00, 0x3F00, 0x4000, 0x4100,
+  0x4200, 0x4300, 0x4400, 0x4500, 0x4600, 0x4700, 0x4800, 0x4900,
+  0x4A00, 0x4B00, 0x4C00, 0x4D00, 0x4E00, 0x4F00, 0x5000, 0x5100,
+  0x5200, 0x5300, 0x5400, 0x5500, 0x5600, 0x5700, 0x5800, 0x5900,
+  0x5A00, 0x5B00, 0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000, 0x6100,
+  0x0109, //0x9
+  0x0E02, 0x4300, 0x4901, 0x4A01, 0x4E49, 0x4F02, 0x5E00,
+  0x010A, //0xA
+  0x0200, 0x0307, 0x0401, 0x0507, 0x1400, 0x1A00, 0x2000, 0x2600,
+  0x010B, //0xb
+  0x442F, 0x4600, 0x470E, 0x480E, 0x4A08, 0x570E, 0x5801,
+  0x0105, //0x5
+  0x1401,
+  0x0100, //0x0
+  0x1C01,
+  0x0105, //0x5
+  0x4000,
+  0x010B, //0xb
+  0x24C3, 0x2502};
+
+
+void SiI2cWrite(u8 address,u8 data){
+  Xil_Out32(I2C_RESET    , 0xA);
+  Xil_Out32(I2C_CONTROL  , 0x2);
+  Xil_Out32(I2C_CONTROL  , 0xC);
+  Xil_Out32(I2C_TX_FIFO  , 0x100 | ((u32)SI_I2C_ADDRESS));
+  Xil_Out32(I2C_TX_FIFO  , (u32) address);
+  Xil_Out32(I2C_TX_FIFO  , 0x200 | ((u32)data));
+  Xil_Out32(I2C_CONTROL  , 0xD);
+  u16 tries = 20000;
+  //Time out of something isn't working
+  //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
+  while((Xil_In32(I2C_STATUS) & 0x4)){
+    tries--;
+    if(!tries){
+      PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
+      break;
+    }
+  }
+  //  usleep(50);
+  Xil_Out32(I2C_CONTROL, 0x0);
+
+  //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
+}
+
+
+void ProgramSI(){
+  /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  
+  Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
+  u16 iWrite=0;
+  for(; iWrite < 5 ;iWrite++){
+    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  }
+  usleep(400000);
+  for(; iWrite < (sizeof(ConfigData)/sizeof(u16));iWrite++){
+    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  }
+  PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
+  
+  Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
+  usleep(1000000); //wait 1s
+  
+  u16 tries = 20000;
+  //Waitinf for lock
+  while((Xil_In32(SI_CONFIG_BASE_ADDR) & 0x60)){
+    usleep(1000);
+    tries--;
+    if(!tries){
+      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
+      break;
+    }
+  }
+  
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  
+}
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
new file mode 100644
index 0000000000..118b53ee7e
--- /dev/null
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -0,0 +1,24 @@
+#ifndef XFSBL_PROGRAMSI_H
+#define XFSBL_PROGRAMSI_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include "xfsbl_hw.h"
+#include "xil_types.h"
+#include "AXI_slave_addrs.h"
+  /*serv base*/
+#define SI_CONFIG_BASE_ADDR AXI_ADDR_SERV
+  /*i2c base*/
+#define SI_I2C_BASE_ADDR AXI_ADDR_SI
+void SiI2cWrite(u8 address,u8 data);
+
+
+void ProgramSI();
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif  /* XFSBL_PROGRAMSI_H */
-- 
2.34.1


From 8cc6f787ec8fa14311306ffb05c58a15d216a002 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Fri, 14 May 2021 17:08:19 -0400
Subject: [PATCH 02/31] SI programming in the way wrong locatoin

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
index fcde6a4530..9887ace2ce 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
@@ -60,6 +60,7 @@ u32 XFsbl_HookAfterBSDownload(void )
 	/**
 	 * Add the code here
 	 */
+	ProgramSI();
 
 	return Status;
 }
@@ -94,7 +95,6 @@ u32 XFsbl_HookBeforeFallback(void)
 	/**
 	 * Add the code here
 	 */
-	ProgramSI();
 
 	return Status;
 }
-- 
2.34.1


From 415d83863c7514253f6c90a79c3fc63b01751247 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Fri, 14 May 2021 19:31:12 -0400
Subject: [PATCH 03/31] updated printing

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 22 +++++++++----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 797c9d205a..987e213364 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -117,23 +117,23 @@ void SiI2cWrite(u8 address,u8 data){
   while((Xil_In32(I2C_STATUS) & 0x4)){
     tries--;
     if(!tries){
-      PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
+      PRINTF(ALWAYS,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
       break;
     }
   }
   //  usleep(50);
   Xil_Out32(I2C_CONTROL, 0x0);
 
-  //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
+  //  PRINTF(ALWAYS,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
 }
 
 
 void ProgramSI(){
   /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
-  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
-  PRINTF(DEBUG_GENERAL,"========================================\r\n");
-  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
-  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(ALWAYS,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(ALWAYS,"========================================\r\n");
+  PRINTF(ALWAYS,"Programming Si-5344 \r\n");
+  PRINTF(ALWAYS,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
   u16 iWrite=0;
@@ -146,7 +146,7 @@ void ProgramSI(){
     SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
 	       (u8)((ConfigData[iWrite]     ) & 0xFF));
   }
-  PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
+  PRINTF(ALWAYS,"Waiting for lock\r\n");
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
   usleep(1000000); //wait 1s
@@ -157,13 +157,13 @@ void ProgramSI(){
     usleep(1000);
     tries--;
     if(!tries){
-      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
+      PRINTF(ALWAYS,"Warning: Timeout waiting for Si lock\r\n");
       break;
     }
   }
   
-  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
-  PRINTF(DEBUG_GENERAL,"========================================\r\n");
-  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(ALWAYS,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(ALWAYS,"========================================\r\n");
+  PRINTF(ALWAYS,"\r\n\r\n\r\n\r\n\r\n");
   
 }
-- 
2.34.1


From a308c15062a9304563c528c8e10175b8f11ea29b Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Sat, 15 May 2021 11:47:49 -0400
Subject: [PATCH 04/31] Added updates for 7series zynq

---
 lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c        |   3 +-
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c    | 169 ++++++++++++++++++
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h    |  24 +++
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c |  22 +--
 4 files changed, 206 insertions(+), 12 deletions(-)
 create mode 100644 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
 create mode 100644 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h

diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
index c1014e53c9..d56dde7e50 100644
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
@@ -28,7 +28,7 @@
 #include "fsbl.h"
 #include "xstatus.h"
 #include "fsbl_hooks.h"
-
+#include "fsbl_programSI.h"
 /************************** Variable Definitions *****************************/
 
 
@@ -84,6 +84,7 @@ u32 FsblHookAfterBitstreamDload(void)
 	 * User logic to be added here.
 	 * Errors to be stored in the status variable and returned
 	 */
+	ProgramSI();
 	fsbl_printf(DEBUG_INFO, "In FsblHookAfterBitstreamDload function \r\n");
 
 	return (Status);
diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
new file mode 100644
index 0000000000..e819c18025
--- /dev/null
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
@@ -0,0 +1,169 @@
+#include "fsbl_programSI.h"
+
+#define PRINTF fsbl_printf
+
+#define SI_I2C_ADDRESS   0xD0
+#define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
+#define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
+#define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
+#define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
+#define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
+#define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
+
+/*
+I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + 0x118))
+I2C_CONTROL      (SI_I2C_BASE_ADDR + 0x100))
+I2C_STATUS       (SI_I2C_BASE_ADDR + 0x104))
+I2C_RX_FIFO      (SI_I2C_BASE_ADDR + 0x10C))
+I2C_TX_FIFO      (SI_I2C_BASE_ADDR + 0x108))
+I2C_RESET        (SI_I2C_BASE_ADDR + 0x040))
+*/
+
+u16 ConfigData[] = {
+  0x010B, //0xb
+  0x24C0, 0x2500,
+  0x0105, //0x5
+  0x4001,
+  0x0100, //0x0
+  0x0600, 0x0700, 0x0800, 0x0B68, 0x1602, 0x17DC, 0x18EE, 0x19DD,
+  0x1ADF, 0x2B02, 0x2C01, 0x2D01, 0x2E38, 0x2F00, 0x3000, 0x3100,
+  0x3200, 0x3300, 0x3400, 0x3500, 0x3638, 0x3700, 0x3800, 0x3900,
+  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3F11, 0x4004, 0x410D, 0x4200,
+  0x4300, 0x4400, 0x450C, 0x4632, 0x4700, 0x4800, 0x4900, 0x4A32,
+  0x4B00, 0x4C00, 0x4D00, 0x4E05, 0x4F00, 0x500F, 0x5103, 0x5200,
+  0x5300, 0x5400, 0x5503, 0x5600, 0x5700, 0x5800, 0x5901, 0x5AAA,
+  0x5BAA, 0x5C0A, 0x5D01, 0x5E00, 0x5F00, 0x6000, 0x6100, 0x6200,
+  0x6300, 0x6400, 0x6500, 0x6600, 0x6700, 0x6800, 0x6900, 0x9202,
+  0x93A0, 0x9500, 0x9680, 0x9860, 0x9A02, 0x9B60, 0x9D08, 0x9E40,
+  0xA020, 0xA200, 0xA9A7, 0xAA61, 0xAB00, 0xAC00, 0xE521, 0xEA0A,
+  0xEB60, 0xEC00, 0xED00,
+  0x0101, //0x1
+  0x0201, 0x1202, 0x1309, 0x1433, 0x1508, 0x1702, 0x1809, 0x1933,
+  0x1A08, 0x2602, 0x2709, 0x2833, 0x2909, 0x2B02, 0x2C09, 0x2D33,
+  0x2E0A, 0x3F00, 0x4000, 0x4140, 0x42FF,
+  0x0102, //0x2
+  0x0600, 0x0832, 0x0900, 0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E01,
+  0x0F00, 0x1000, 0x1100, 0x1200, 0x1300, 0x1400, 0x1500, 0x1600,
+  0x1700, 0x1800, 0x1900, 0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00,
+  0x1F00, 0x2000, 0x2100, 0x2200, 0x2300, 0x2400, 0x2500, 0x2600,
+  0x2700, 0x2800, 0x2900, 0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00,
+  0x2F00, 0x310B, 0x320B, 0x330B, 0x340B, 0x3500, 0x3600, 0x3700,
+  0x38C0, 0x39DA, 0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3EC0, 0x5003,
+  0x5100, 0x5200, 0x5304, 0x5400, 0x5500, 0x5C02, 0x5D00, 0x5E00,
+  0x5F02, 0x6000, 0x6100, 0x6B41, 0x6C50, 0x6D4F, 0x6E4C, 0x6F4C,
+  0x704F, 0x7153, 0x724D, 0x8A00, 0x8B00, 0x8C00, 0x8D00, 0x8E00,
+  0x8F00, 0x9000, 0x9100, 0x94B0, 0x9602, 0x9702, 0x9902, 0x9DFA,
+  0x9E01, 0x9F00, 0xA9CC, 0xAA04, 0xAB00, 0xB7FF, 0x0103, 0x0200,
+  0x0300, 0x0400, 0x0500, 0x0607, 0x0700, 0x0800, 0x0900, 0x0A00,
+  0x0B80, 0x0C00, 0x0D00, 0x0E00, 0x0FEC, 0x1060, 0x1121, 0x1200,
+  0x1300, 0x14B8, 0x15C6, 0x1692, 0x1700, 0x1800, 0x19C0, 0x1A49,
+  0x1B6E, 0x1C0A, 0x1D00, 0x1E00, 0x1F8B, 0x2077, 0x21B7, 0x2200,
+  0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900, 0x2A00,
+  0x2B00, 0x2C00, 0x2D00, 0x3800, 0x391F, 0x3B00, 0x3C00, 0x3D00,
+  0x3E00, 0x3F00, 0x4000, 0x4100, 0x4200, 0x4300, 0x4400, 0x4500,
+  0x4600, 0x4700, 0x4800, 0x4900, 0x4A00, 0x4B00, 0x4C00, 0x4D00,
+  0x4E00, 0x4F00, 0x5000, 0x5100, 0x5200, 0x5900, 0x5A00, 0x5B00,
+  0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000,
+  0x0104, //0x4
+  0x8700,
+  0x0105, //0x5
+  0x0813, 0x0922, 0x0A0C, 0x0B0B, 0x0C07, 0x0D3F, 0x0E16, 0x0F2A, 
+  0x1009, 0x1108, 0x1207, 0x133F, 0x1500, 0x1600, 0x1700, 0x1800,
+  0x19BC, 0x1A02, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F80, 0x212B,
+  0x2A01, 0x2B01, 0x2C87, 0x2D03, 0x2E19, 0x2F19, 0x3100, 0x3242,
+  0x3303, 0x3400, 0x3500, 0x3604, 0x3700, 0x3800, 0x3900, 0x3A02,
+  0x3B03, 0x3C00, 0x3D11, 0x3E06, 0x890D, 0x8A00, 0x9BFA, 0x9D13,
+  0x9E24, 0x9F0C, 0xA00B, 0xA107, 0xA23F, 0xA603,
+  0x0108, //0x8
+  0x0235, 0x0305, 0x0400, 0x0500, 0x0600, 0x0700, 0x0800, 0x0900,
+  0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E00, 0x0F00, 0x1000, 0x1100,
+  0x1200, 0x1300, 0x1400, 0x1500, 0x1600, 0x1700, 0x1800, 0x1900,
+  0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F00, 0x2000, 0x2100,
+  0x2200, 0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900,
+  0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00, 0x2F00, 0x3000, 0x3100,
+  0x3200, 0x3300, 0x3400, 0x3500, 0x3600, 0x3700, 0x3800, 0x3900,
+  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3E00, 0x3F00, 0x4000, 0x4100,
+  0x4200, 0x4300, 0x4400, 0x4500, 0x4600, 0x4700, 0x4800, 0x4900,
+  0x4A00, 0x4B00, 0x4C00, 0x4D00, 0x4E00, 0x4F00, 0x5000, 0x5100,
+  0x5200, 0x5300, 0x5400, 0x5500, 0x5600, 0x5700, 0x5800, 0x5900,
+  0x5A00, 0x5B00, 0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000, 0x6100,
+  0x0109, //0x9
+  0x0E02, 0x4300, 0x4901, 0x4A01, 0x4E49, 0x4F02, 0x5E00,
+  0x010A, //0xA
+  0x0200, 0x0307, 0x0401, 0x0507, 0x1400, 0x1A00, 0x2000, 0x2600,
+  0x010B, //0xb
+  0x442F, 0x4600, 0x470E, 0x480E, 0x4A08, 0x570E, 0x5801,
+  0x0105, //0x5
+  0x1401,
+  0x0100, //0x0
+  0x1C01,
+  0x0105, //0x5
+  0x4000,
+  0x010B, //0xb
+  0x24C3, 0x2502};
+
+
+void SiI2cWrite(u8 address,u8 data){
+  Xil_Out32(I2C_RESET    , 0xA);
+  Xil_Out32(I2C_CONTROL  , 0x2);
+  Xil_Out32(I2C_CONTROL  , 0xC);
+  Xil_Out32(I2C_TX_FIFO  , 0x100 | ((u32)SI_I2C_ADDRESS));
+  Xil_Out32(I2C_TX_FIFO  , (u32) address);
+  Xil_Out32(I2C_TX_FIFO  , 0x200 | ((u32)data));
+  Xil_Out32(I2C_CONTROL  , 0xD);
+  u16 tries = 20000;
+  //Time out of something isn't working
+  //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
+  while((Xil_In32(I2C_STATUS) & 0x4)){
+    tries--;
+    if(!tries){
+      PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
+      break;
+    }
+  }
+  //  usleep(50);
+  Xil_Out32(I2C_CONTROL, 0x0);
+
+  //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
+}
+
+
+void ProgramSI(){
+  /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  
+  Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
+  u16 iWrite=0;
+  for(; iWrite < 5 ;iWrite++){
+    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  }
+  usleep(400000);
+  for(; iWrite < (sizeof(ConfigData)/sizeof(u16));iWrite++){
+    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  }
+  PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
+  
+  Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
+  usleep(1000000); //wait 1s
+  
+  u16 tries = 20000;
+  //Waitinf for lock
+  while((Xil_In32(SI_CONFIG_BASE_ADDR) & 0x60)){
+    usleep(1000);
+    tries--;
+    if(!tries){
+      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
+      break;
+    }
+  }
+  
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  
+}
diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
new file mode 100644
index 0000000000..60abc29f9e
--- /dev/null
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
@@ -0,0 +1,24 @@
+#ifndef FSBL_PROGRAMSI_H
+#define FSBL_PROGRAMSI_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include "fsbl.h"
+#include "xil_types.h"
+#include "AXI_slave_addrs.h"
+  /*serv base*/
+#define SI_CONFIG_BASE_ADDR AXI_ADDR_SERV
+  /*i2c base*/
+#define SI_I2C_BASE_ADDR AXI_ADDR_SI
+void SiI2cWrite(u8 address,u8 data);
+
+
+void ProgramSI();
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif  /* FSBL_PROGRAMSI_H */
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 987e213364..797c9d205a 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -117,23 +117,23 @@ void SiI2cWrite(u8 address,u8 data){
   while((Xil_In32(I2C_STATUS) & 0x4)){
     tries--;
     if(!tries){
-      PRINTF(ALWAYS,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
+      PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
       break;
     }
   }
   //  usleep(50);
   Xil_Out32(I2C_CONTROL, 0x0);
 
-  //  PRINTF(ALWAYS,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
+  //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
 }
 
 
 void ProgramSI(){
   /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
-  PRINTF(ALWAYS,"\r\n\r\n\r\n\r\n\r\n");
-  PRINTF(ALWAYS,"========================================\r\n");
-  PRINTF(ALWAYS,"Programming Si-5344 \r\n");
-  PRINTF(ALWAYS,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
   u16 iWrite=0;
@@ -146,7 +146,7 @@ void ProgramSI(){
     SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
 	       (u8)((ConfigData[iWrite]     ) & 0xFF));
   }
-  PRINTF(ALWAYS,"Waiting for lock\r\n");
+  PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
   usleep(1000000); //wait 1s
@@ -157,13 +157,13 @@ void ProgramSI(){
     usleep(1000);
     tries--;
     if(!tries){
-      PRINTF(ALWAYS,"Warning: Timeout waiting for Si lock\r\n");
+      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
       break;
     }
   }
   
-  PRINTF(ALWAYS,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
-  PRINTF(ALWAYS,"========================================\r\n");
-  PRINTF(ALWAYS,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   
 }
-- 
2.34.1


From c5b443e3614b287704fef11c68292106a1284273 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Fri, 25 Jun 2021 15:20:49 -0400
Subject: [PATCH 05/31] Added axi addr printing in 7s fsbl

---
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
index e819c18025..370473688f 100644
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
@@ -133,21 +133,31 @@ void ProgramSI(){
   PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   PRINTF(DEBUG_GENERAL,"========================================\r\n");
   PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
+  PRINTF(DEBUG_GENERAL,"Si-I2C    @ 0x%08X \r\n",SI_I2C_BASE_ADDR);
+  PRINTF(DEBUG_GENERAL,"Serv ctrl @ 0x%08X \r\n",SI_CONFIG_BASE_ADDR);
+  usleep(1000);
   PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
   
+  //enable the SI chip
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
+
+  
   u16 iWrite=0;
+  //write the first 5 i2c writes to reset the chip
   for(; iWrite < 5 ;iWrite++){
     SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
 	       (u8)((ConfigData[iWrite]     ) & 0xFF));
   }
+  //Wait for reset to finish
   usleep(400000);
+  //Program the SI chip
   for(; iWrite < (sizeof(ConfigData)/sizeof(u16));iWrite++){
     SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
 	       (u8)((ConfigData[iWrite]     ) & 0xFF));
   }
   PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
   
+  //enable the output of the SI chip
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
   usleep(1000000); //wait 1s
   
-- 
2.34.1


From b1c2c202ecdb9a8773e3b0c2a8b7d583d476880f Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Fri, 25 Jun 2021 15:47:39 -0400
Subject: [PATCH 06/31] Moved which 7s fsbl hooks we use

---
 lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
index d56dde7e50..6dacc5627c 100644
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
@@ -84,7 +84,6 @@ u32 FsblHookAfterBitstreamDload(void)
 	 * User logic to be added here.
 	 * Errors to be stored in the status variable and returned
 	 */
-	ProgramSI();
 	fsbl_printf(DEBUG_INFO, "In FsblHookAfterBitstreamDload function \r\n");
 
 	return (Status);
@@ -113,6 +112,7 @@ u32 FsblHookBeforeHandoff(void)
 	 * Errors to be stored in the status variable and returned
 	 */
 	fsbl_printf(DEBUG_INFO,"In FsblHookBeforeHandoff function \r\n");
+	ProgramSI();
 
 	return (Status);
 }
-- 
2.34.1


From 1f4df737f96d57226b625ffbc84297dda41b1582 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 24 Jan 2022 11:16:25 -0500
Subject: [PATCH 07/31] Fix for SSD

---
 lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c b/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
index 5686bd4c6f..faee14f9c1 100644
--- a/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
+++ b/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
@@ -23544,7 +23544,8 @@ static int serdes_illcalib (u32 lane3_protocol, u32 lane3_rate, u32 lane2_protoc
       serdes_illcalib_pcie_gen1 (0, 0, 1, 0, 0, 0, 0, 0, 0);
      //Revert the ILL settings to SATA-Gen2 case
       Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,temp_pll_fbdiv_frac_3_msb_offset);
-      Xil_Out32(SERDES_PLL_REF_SEL3_OFFSET, temp_PLL_REF_SEL_OFFSET);
+      //      Xil_Out32(SERDES_PLL_REF_SEL3_OFFSET, temp_PLL_REF_SEL_OFFSET);
+      Xil_Out32(SERDES_PLL_REF_SEL2_OFFSET, temp_PLL_REF_SEL_OFFSET);
       Xil_Out32(SERDES_L2_TM_IQ_ILL1,temp_TM_IQ_ILL1);
       Xil_Out32(SERDES_L2_TX_DIG_TM_61, temp_tx_dig_tm_61);
       Xil_Out32(SERDES_L2_TM_DIG_6, temp_tm_dig_6);
-- 
2.34.1


From 1e749eb78df0d4133e6b34d6de215aa1d139840e Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 25 Jan 2022 09:37:34 -0500
Subject: [PATCH 08/31] another fsbl change for SSD

---
 .../zynqmp_fsbl/misc/zcu102/psu_init.c        | 81 ++++++++++++-------
 1 file changed, 54 insertions(+), 27 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c b/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
index faee14f9c1..93da71a2cf 100644
--- a/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
+++ b/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
@@ -23527,33 +23527,60 @@ static int serdes_illcalib (u32 lane3_protocol, u32 lane3_rate, u32 lane2_protoc
       Xil_Out32(SERDES_L1_TM_E_ILL1, temp_TM_E_ILL1);
    }
    if (lane2_protocol == 2)
-   {
-      temp_pll_fbdiv_frac_3_msb_offset=Xil_In32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB);
-      Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,0x0);
-     //Set ILL settings for PCIe Mode
-      temp_PLL_REF_SEL_OFFSET = Xil_In32(SERDES_PLL_REF_SEL2_OFFSET);
-      PSU_Mask_Write(SERDES_PLL_REF_SEL2_OFFSET, 0x0000001FU, 0x0000000DU);
-      temp_TM_IQ_ILL1 = Xil_In32(SERDES_L2_TM_IQ_ILL1);
-      temp_TM_E_ILL1 = Xil_In32(SERDES_L2_TM_E_ILL1);
-      Xil_Out32(SERDES_L2_TM_IQ_ILL1,0x78);
-      temp_tx_dig_tm_61 = Xil_In32(SERDES_L2_TX_DIG_TM_61);
-      temp_tm_dig_6 = Xil_In32(SERDES_L2_TM_DIG_6);
-     PSU_Mask_Write(SERDES_L2_TX_DIG_TM_61, 0x0000000BU, 0x00000000U);
-     PSU_Mask_Write(SERDES_L2_TM_DIG_6, 0x0000000FU, 0x00000000U);
-     temp_ill12 = Xil_In32(SERDES_L2_TM_ILL12) & 0xF0;
-      serdes_illcalib_pcie_gen1 (0, 0, 1, 0, 0, 0, 0, 0, 0);
-     //Revert the ILL settings to SATA-Gen2 case
-      Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,temp_pll_fbdiv_frac_3_msb_offset);
-      //      Xil_Out32(SERDES_PLL_REF_SEL3_OFFSET, temp_PLL_REF_SEL_OFFSET);
-      Xil_Out32(SERDES_PLL_REF_SEL2_OFFSET, temp_PLL_REF_SEL_OFFSET);
-      Xil_Out32(SERDES_L2_TM_IQ_ILL1,temp_TM_IQ_ILL1);
-      Xil_Out32(SERDES_L2_TX_DIG_TM_61, temp_tx_dig_tm_61);
-      Xil_Out32(SERDES_L2_TM_DIG_6, temp_tm_dig_6);
-     Xil_Out32(SERDES_L2_TM_E_ILL2, Xil_In32(SERDES_L2_TM_E_ILL1));
-     temp_ill12 = temp_ill12 | (Xil_In32(SERDES_L2_TM_ILL12)>>4 & 0xF);
-     Xil_Out32(SERDES_L2_TM_ILL12, temp_ill12);
-      Xil_Out32(SERDES_L2_TM_E_ILL1, temp_TM_E_ILL1);
-   }
+     {
+       temp_pll_fbdiv_frac_3_msb_offset=Xil_In32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB);
+       //Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,0x0);
+       temp_PLL_REF_SEL_OFFSET = Xil_In32(SERDES_PLL_REF_SEL2_OFFSET);
+       //PSU_Mask_Write(SERDES_PLL_REF_SEL2_OFFSET, 0x0000001FU, 0x0000000DU);
+       temp_TM_IQ_ILL1 = Xil_In32(SERDES_L2_TM_IQ_ILL1);
+       temp_TM_E_ILL1 = Xil_In32(SERDES_L2_TM_E_ILL1);
+       //Xil_Out32(SERDES_L2_TM_IQ_ILL1,0x78);
+       temp_tx_dig_tm_61 = Xil_In32(SERDES_L2_TX_DIG_TM_61);
+       temp_tm_dig_6 = Xil_In32(SERDES_L2_TM_DIG_6);
+       //PSU_Mask_Write(SERDES_L2_TX_DIG_TM_61, 0x0000000BU, 0x00000000U);
+       //PSU_Mask_Write(SERDES_L2_TM_DIG_6, 0x0000000FU, 0x00000000U);
+       //temp_ill12 = Xil_In32(SERDES_L2_TM_ILL12) & 0xF0;
+  
+       serdes_illcalib_pcie_gen1 (0, 0, 1, 0, 0, 0, 0, 0, 0);
+  
+       Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,temp_pll_fbdiv_frac_3_msb_offset);
+       Xil_Out32(SERDES_PLL_REF_SEL3_OFFSET, temp_PLL_REF_SEL_OFFSET);
+       Xil_Out32(SERDES_L2_TM_IQ_ILL1,temp_TM_IQ_ILL1);
+       Xil_Out32(SERDES_L2_TX_DIG_TM_61, temp_tx_dig_tm_61);
+       Xil_Out32(SERDES_L2_TM_DIG_6, temp_tm_dig_6);
+       Xil_Out32(SERDES_L2_TM_E_ILL2, Xil_In32(SERDES_L2_TM_E_ILL1));
+       //temp_ill12 = temp_ill12 | (Xil_In32(SERDES_L2_TM_ILL12)>>4 & 0xF);
+       //Xil_Out32(SERDES_L2_TM_ILL12, temp_ill12);
+       Xil_Out32(SERDES_L2_TM_E_ILL1, temp_TM_E_ILL1);
+     }
+//   if (lane2_protocol == 2)
+//   {
+//      temp_pll_fbdiv_frac_3_msb_offset=Xil_In32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB);
+//      Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,0x0);
+//     //Set ILL settings for PCIe Mode
+//      temp_PLL_REF_SEL_OFFSET = Xil_In32(SERDES_PLL_REF_SEL2_OFFSET);
+//      PSU_Mask_Write(SERDES_PLL_REF_SEL2_OFFSET, 0x0000001FU, 0x0000000DU);
+//      temp_TM_IQ_ILL1 = Xil_In32(SERDES_L2_TM_IQ_ILL1);
+//      temp_TM_E_ILL1 = Xil_In32(SERDES_L2_TM_E_ILL1);
+//      Xil_Out32(SERDES_L2_TM_IQ_ILL1,0x78);
+//      temp_tx_dig_tm_61 = Xil_In32(SERDES_L2_TX_DIG_TM_61);
+//      temp_tm_dig_6 = Xil_In32(SERDES_L2_TM_DIG_6);
+//     PSU_Mask_Write(SERDES_L2_TX_DIG_TM_61, 0x0000000BU, 0x00000000U);
+//     PSU_Mask_Write(SERDES_L2_TM_DIG_6, 0x0000000FU, 0x00000000U);
+//     temp_ill12 = Xil_In32(SERDES_L2_TM_ILL12) & 0xF0;
+//      serdes_illcalib_pcie_gen1 (0, 0, 1, 0, 0, 0, 0, 0, 0);
+//     //Revert the ILL settings to SATA-Gen2 case
+//      Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,temp_pll_fbdiv_frac_3_msb_offset);
+//      //      Xil_Out32(SERDES_PLL_REF_SEL3_OFFSET, temp_PLL_REF_SEL_OFFSET);
+//      Xil_Out32(SERDES_PLL_REF_SEL2_OFFSET, temp_PLL_REF_SEL_OFFSET);
+//      Xil_Out32(SERDES_L2_TM_IQ_ILL1,temp_TM_IQ_ILL1);
+//      Xil_Out32(SERDES_L2_TX_DIG_TM_61, temp_tx_dig_tm_61);
+//      Xil_Out32(SERDES_L2_TM_DIG_6, temp_tm_dig_6);
+//     Xil_Out32(SERDES_L2_TM_E_ILL2, Xil_In32(SERDES_L2_TM_E_ILL1));
+//     temp_ill12 = temp_ill12 | (Xil_In32(SERDES_L2_TM_ILL12)>>4 & 0xF);
+//     Xil_Out32(SERDES_L2_TM_ILL12, temp_ill12);
+//      Xil_Out32(SERDES_L2_TM_E_ILL1, temp_TM_E_ILL1);
+//   }
    if (lane3_protocol == 2)
    {
       temp_pll_fbdiv_frac_3_msb_offset=Xil_In32(SERDES_L3_PLL_FBDIV_FRAC_3_MSB);
-- 
2.34.1


From a5bb83cd915601d9edc16664a28f724789a10ee6 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 25 Jan 2022 11:29:02 -0500
Subject: [PATCH 09/31] Another fsbl change for SSD

---
 .../zynqmp_fsbl/misc/zcu102/psu_init.c        | 23 ++++++++++---------
 1 file changed, 12 insertions(+), 11 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c b/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
index 93da71a2cf..c4bce28010 100644
--- a/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
+++ b/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
@@ -23526,31 +23526,32 @@ static int serdes_illcalib (u32 lane3_protocol, u32 lane3_rate, u32 lane2_protoc
      Xil_Out32(SERDES_L1_TM_ILL12, temp_ill12);
       Xil_Out32(SERDES_L1_TM_E_ILL1, temp_TM_E_ILL1);
    }
+
    if (lane2_protocol == 2)
      {
        temp_pll_fbdiv_frac_3_msb_offset=Xil_In32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB);
-       //Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,0x0);
+       Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,0x0);
+       //Set ILL settings for PCIe Mode
        temp_PLL_REF_SEL_OFFSET = Xil_In32(SERDES_PLL_REF_SEL2_OFFSET);
-       //PSU_Mask_Write(SERDES_PLL_REF_SEL2_OFFSET, 0x0000001FU, 0x0000000DU);
+       PSU_Mask_Write(SERDES_PLL_REF_SEL2_OFFSET, 0x0000001FU, 0x0000000DU);
        temp_TM_IQ_ILL1 = Xil_In32(SERDES_L2_TM_IQ_ILL1);
        temp_TM_E_ILL1 = Xil_In32(SERDES_L2_TM_E_ILL1);
-       //Xil_Out32(SERDES_L2_TM_IQ_ILL1,0x78);
+       Xil_Out32(SERDES_L2_TM_IQ_ILL1,0x78);
        temp_tx_dig_tm_61 = Xil_In32(SERDES_L2_TX_DIG_TM_61);
        temp_tm_dig_6 = Xil_In32(SERDES_L2_TM_DIG_6);
-       //PSU_Mask_Write(SERDES_L2_TX_DIG_TM_61, 0x0000000BU, 0x00000000U);
-       //PSU_Mask_Write(SERDES_L2_TM_DIG_6, 0x0000000FU, 0x00000000U);
-       //temp_ill12 = Xil_In32(SERDES_L2_TM_ILL12) & 0xF0;
-  
+       PSU_Mask_Write(SERDES_L2_TX_DIG_TM_61, 0x0000000BU, 0x00000000U);
+       PSU_Mask_Write(SERDES_L2_TM_DIG_6, 0x0000000FU, 0x00000000U);
+       temp_ill12 = Xil_In32(SERDES_L2_TM_ILL12) & 0xF0;
        serdes_illcalib_pcie_gen1 (0, 0, 1, 0, 0, 0, 0, 0, 0);
-  
+       //Revert the ILL settings to SATA-Gen2 case
        Xil_Out32(SERDES_L2_PLL_FBDIV_FRAC_3_MSB,temp_pll_fbdiv_frac_3_msb_offset);
-       Xil_Out32(SERDES_PLL_REF_SEL3_OFFSET, temp_PLL_REF_SEL_OFFSET);
+       Xil_Out32(SERDES_PLL_REF_SEL2_OFFSET, temp_PLL_REF_SEL_OFFSET);
        Xil_Out32(SERDES_L2_TM_IQ_ILL1,temp_TM_IQ_ILL1);
        Xil_Out32(SERDES_L2_TX_DIG_TM_61, temp_tx_dig_tm_61);
        Xil_Out32(SERDES_L2_TM_DIG_6, temp_tm_dig_6);
        Xil_Out32(SERDES_L2_TM_E_ILL2, Xil_In32(SERDES_L2_TM_E_ILL1));
-       //temp_ill12 = temp_ill12 | (Xil_In32(SERDES_L2_TM_ILL12)>>4 & 0xF);
-       //Xil_Out32(SERDES_L2_TM_ILL12, temp_ill12);
+       temp_ill12 = temp_ill12 | (Xil_In32(SERDES_L2_TM_ILL12)>>4 & 0xF);
+       Xil_Out32(SERDES_L2_TM_ILL12, temp_ill12);
        Xil_Out32(SERDES_L2_TM_E_ILL1, temp_TM_E_ILL1);
      }
 //   if (lane2_protocol == 2)
-- 
2.34.1


From bb7a38684e45f9c87f314d32256b5376d6902d2e Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Wed, 26 Jan 2022 10:14:05 -0500
Subject: [PATCH 10/31] Commenting out serdes_illcalib for test

---
 lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c b/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
index c4bce28010..2033126692 100644
--- a/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
+++ b/lib/sw_apps/zynqmp_fsbl/misc/zcu102/psu_init.c
@@ -20223,7 +20223,7 @@ unsigned long psu_serdes_init_data(void)
     /*
     * SERDES ILL CALIB
     */
-		serdes_illcalib(2,3,3,0,4,0,1,1);
+	//dan 2022-01-26		serdes_illcalib(2,3,3,0,4,0,1,1);
 
 /*##################################################################### */
 
-- 
2.34.1


From 85b71fb13838ab6924b8321425a931fa8f3ef859 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 10:18:06 -0400
Subject: [PATCH 11/31] Added build time interface to updated clock info

---
 lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c     |  10 +-
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c | 203 +++++++--------------
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h |  37 +++-
 3 files changed, 102 insertions(+), 148 deletions(-)

diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
index 6dacc5627c..ff99f59e8b 100644
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
@@ -28,7 +28,8 @@
 #include "fsbl.h"
 #include "xstatus.h"
 #include "fsbl_hooks.h"
-#include "fsbl_programSI.h"
+#include "fsbl_programSI.h" //code for programming an Si chip
+#include "si_data.h"        //structures storing si programming data
 /************************** Variable Definitions *****************************/
 
 
@@ -112,7 +113,12 @@ u32 FsblHookBeforeHandoff(void)
 	 * Errors to be stored in the status variable and returned
 	 */
 	fsbl_printf(DEBUG_INFO,"In FsblHookBeforeHandoff function \r\n");
-	ProgramSI();
+	//Call the init function to initialize the siconfig structures
+	siConfigInit();
+	for(u32 iConfig = 0; iConfig < siConfigCount;iConfig++){
+	  ProgramSI(siConfigs[iConfig]);
+	}
+
 
 	return (Status);
 }
diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
index 370473688f..94c80d1e49 100644
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
@@ -1,120 +1,17 @@
 #include "fsbl_programSI.h"
 
-#define PRINTF fsbl_printf
-
-#define SI_I2C_ADDRESS   0xD0
-#define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
-#define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
-#define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
-#define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
-#define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
-#define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
-
-/*
-I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + 0x118))
-I2C_CONTROL      (SI_I2C_BASE_ADDR + 0x100))
-I2C_STATUS       (SI_I2C_BASE_ADDR + 0x104))
-I2C_RX_FIFO      (SI_I2C_BASE_ADDR + 0x10C))
-I2C_TX_FIFO      (SI_I2C_BASE_ADDR + 0x108))
-I2C_RESET        (SI_I2C_BASE_ADDR + 0x040))
-*/
-
-u16 ConfigData[] = {
-  0x010B, //0xb
-  0x24C0, 0x2500,
-  0x0105, //0x5
-  0x4001,
-  0x0100, //0x0
-  0x0600, 0x0700, 0x0800, 0x0B68, 0x1602, 0x17DC, 0x18EE, 0x19DD,
-  0x1ADF, 0x2B02, 0x2C01, 0x2D01, 0x2E38, 0x2F00, 0x3000, 0x3100,
-  0x3200, 0x3300, 0x3400, 0x3500, 0x3638, 0x3700, 0x3800, 0x3900,
-  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3F11, 0x4004, 0x410D, 0x4200,
-  0x4300, 0x4400, 0x450C, 0x4632, 0x4700, 0x4800, 0x4900, 0x4A32,
-  0x4B00, 0x4C00, 0x4D00, 0x4E05, 0x4F00, 0x500F, 0x5103, 0x5200,
-  0x5300, 0x5400, 0x5503, 0x5600, 0x5700, 0x5800, 0x5901, 0x5AAA,
-  0x5BAA, 0x5C0A, 0x5D01, 0x5E00, 0x5F00, 0x6000, 0x6100, 0x6200,
-  0x6300, 0x6400, 0x6500, 0x6600, 0x6700, 0x6800, 0x6900, 0x9202,
-  0x93A0, 0x9500, 0x9680, 0x9860, 0x9A02, 0x9B60, 0x9D08, 0x9E40,
-  0xA020, 0xA200, 0xA9A7, 0xAA61, 0xAB00, 0xAC00, 0xE521, 0xEA0A,
-  0xEB60, 0xEC00, 0xED00,
-  0x0101, //0x1
-  0x0201, 0x1202, 0x1309, 0x1433, 0x1508, 0x1702, 0x1809, 0x1933,
-  0x1A08, 0x2602, 0x2709, 0x2833, 0x2909, 0x2B02, 0x2C09, 0x2D33,
-  0x2E0A, 0x3F00, 0x4000, 0x4140, 0x42FF,
-  0x0102, //0x2
-  0x0600, 0x0832, 0x0900, 0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E01,
-  0x0F00, 0x1000, 0x1100, 0x1200, 0x1300, 0x1400, 0x1500, 0x1600,
-  0x1700, 0x1800, 0x1900, 0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00,
-  0x1F00, 0x2000, 0x2100, 0x2200, 0x2300, 0x2400, 0x2500, 0x2600,
-  0x2700, 0x2800, 0x2900, 0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00,
-  0x2F00, 0x310B, 0x320B, 0x330B, 0x340B, 0x3500, 0x3600, 0x3700,
-  0x38C0, 0x39DA, 0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3EC0, 0x5003,
-  0x5100, 0x5200, 0x5304, 0x5400, 0x5500, 0x5C02, 0x5D00, 0x5E00,
-  0x5F02, 0x6000, 0x6100, 0x6B41, 0x6C50, 0x6D4F, 0x6E4C, 0x6F4C,
-  0x704F, 0x7153, 0x724D, 0x8A00, 0x8B00, 0x8C00, 0x8D00, 0x8E00,
-  0x8F00, 0x9000, 0x9100, 0x94B0, 0x9602, 0x9702, 0x9902, 0x9DFA,
-  0x9E01, 0x9F00, 0xA9CC, 0xAA04, 0xAB00, 0xB7FF, 0x0103, 0x0200,
-  0x0300, 0x0400, 0x0500, 0x0607, 0x0700, 0x0800, 0x0900, 0x0A00,
-  0x0B80, 0x0C00, 0x0D00, 0x0E00, 0x0FEC, 0x1060, 0x1121, 0x1200,
-  0x1300, 0x14B8, 0x15C6, 0x1692, 0x1700, 0x1800, 0x19C0, 0x1A49,
-  0x1B6E, 0x1C0A, 0x1D00, 0x1E00, 0x1F8B, 0x2077, 0x21B7, 0x2200,
-  0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900, 0x2A00,
-  0x2B00, 0x2C00, 0x2D00, 0x3800, 0x391F, 0x3B00, 0x3C00, 0x3D00,
-  0x3E00, 0x3F00, 0x4000, 0x4100, 0x4200, 0x4300, 0x4400, 0x4500,
-  0x4600, 0x4700, 0x4800, 0x4900, 0x4A00, 0x4B00, 0x4C00, 0x4D00,
-  0x4E00, 0x4F00, 0x5000, 0x5100, 0x5200, 0x5900, 0x5A00, 0x5B00,
-  0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000,
-  0x0104, //0x4
-  0x8700,
-  0x0105, //0x5
-  0x0813, 0x0922, 0x0A0C, 0x0B0B, 0x0C07, 0x0D3F, 0x0E16, 0x0F2A, 
-  0x1009, 0x1108, 0x1207, 0x133F, 0x1500, 0x1600, 0x1700, 0x1800,
-  0x19BC, 0x1A02, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F80, 0x212B,
-  0x2A01, 0x2B01, 0x2C87, 0x2D03, 0x2E19, 0x2F19, 0x3100, 0x3242,
-  0x3303, 0x3400, 0x3500, 0x3604, 0x3700, 0x3800, 0x3900, 0x3A02,
-  0x3B03, 0x3C00, 0x3D11, 0x3E06, 0x890D, 0x8A00, 0x9BFA, 0x9D13,
-  0x9E24, 0x9F0C, 0xA00B, 0xA107, 0xA23F, 0xA603,
-  0x0108, //0x8
-  0x0235, 0x0305, 0x0400, 0x0500, 0x0600, 0x0700, 0x0800, 0x0900,
-  0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E00, 0x0F00, 0x1000, 0x1100,
-  0x1200, 0x1300, 0x1400, 0x1500, 0x1600, 0x1700, 0x1800, 0x1900,
-  0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F00, 0x2000, 0x2100,
-  0x2200, 0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900,
-  0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00, 0x2F00, 0x3000, 0x3100,
-  0x3200, 0x3300, 0x3400, 0x3500, 0x3600, 0x3700, 0x3800, 0x3900,
-  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3E00, 0x3F00, 0x4000, 0x4100,
-  0x4200, 0x4300, 0x4400, 0x4500, 0x4600, 0x4700, 0x4800, 0x4900,
-  0x4A00, 0x4B00, 0x4C00, 0x4D00, 0x4E00, 0x4F00, 0x5000, 0x5100,
-  0x5200, 0x5300, 0x5400, 0x5500, 0x5600, 0x5700, 0x5800, 0x5900,
-  0x5A00, 0x5B00, 0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000, 0x6100,
-  0x0109, //0x9
-  0x0E02, 0x4300, 0x4901, 0x4A01, 0x4E49, 0x4F02, 0x5E00,
-  0x010A, //0xA
-  0x0200, 0x0307, 0x0401, 0x0507, 0x1400, 0x1A00, 0x2000, 0x2600,
-  0x010B, //0xb
-  0x442F, 0x4600, 0x470E, 0x480E, 0x4A08, 0x570E, 0x5801,
-  0x0105, //0x5
-  0x1401,
-  0x0100, //0x0
-  0x1C01,
-  0x0105, //0x5
-  0x4000,
-  0x010B, //0xb
-  0x24C3, 0x2502};
-
-
-void SiI2cWrite(u8 address,u8 data){
-  Xil_Out32(I2C_RESET    , 0xA);
-  Xil_Out32(I2C_CONTROL  , 0x2);
-  Xil_Out32(I2C_CONTROL  , 0xC);
-  Xil_Out32(I2C_TX_FIFO  , 0x100 | ((u32)SI_I2C_ADDRESS));
-  Xil_Out32(I2C_TX_FIFO  , (u32) address);
-  Xil_Out32(I2C_TX_FIFO  , 0x200 | ((u32)data));
-  Xil_Out32(I2C_CONTROL  , 0xD);
+void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
+  Xil_Out32(axi_base_address + OFFSET_I2C_RESET    , 0xA);
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  , 0x2);
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  , 0xC);
+  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  , 0x100 | ((u32)i2c_address));
+  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  , (u32) address);
+  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  , 0x200 | ((u32)data));
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  , 0xD);
   u16 tries = 20000;
   //Time out of something isn't working
   //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
-  while((Xil_In32(I2C_STATUS) & 0x4)){
+  while((Xil_In32(axi_base_address+OFFSET_I2C_STATUS) & 0x4)){
     tries--;
     if(!tries){
       PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
@@ -122,57 +19,85 @@ void SiI2cWrite(u8 address,u8 data){
     }
   }
   //  usleep(50);
-  Xil_Out32(I2C_CONTROL, 0x0);
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL, 0x0);
 
   //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
 }
 
 
-void ProgramSI(){
+void ProgramSI(sProgramSi config){
   /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
   PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   PRINTF(DEBUG_GENERAL,"========================================\r\n");
-  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
-  PRINTF(DEBUG_GENERAL,"Si-I2C    @ 0x%08X \r\n",SI_I2C_BASE_ADDR);
-  PRINTF(DEBUG_GENERAL,"Serv ctrl @ 0x%08X \r\n",SI_CONFIG_BASE_ADDR);
-  usleep(1000);
-  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(DEBUG_GENERAL,"Programming %s \r\n",
+	 config.name);
+  PRINTF(DEBUG_GENERAL,"AXI I2C   @ 0x%08X \r\n",
+	 config.i2c_AXIBaseAddr);//SI_I2C_BASE_ADDR);
+  PRINTF(DEBUG_GENERAL,"Si enable        @ 0x%08X(0x%08X) Val: 0x%08X \r\n",
+	 config.si_enable_AXIAddr,
+	 config.si_enable_MASK,
+	 Xil_In32(config.si_enable_AXIAddr) & config.si_enable_MASK);//SI_CONFIG_BASE_ADDR);
+  PRINTF(DEBUG_GENERAL,"Si output enable @ 0x%08X(0x%08X) Val: 0x%08X \r\n",
+	 config.si_oe_AXIAddr,
+	 config.si_oe_MASK,
+	 Xil_In32(config.si_oe_AXIAddr) & config.si_oe_MASK);//SI_CONFIG_BASE_ADDR);
+  PRINTF(DEBUG_GENERAL,"Si locked        @ 0x%08X(0x%08X) Val: 0x%08X \r\n",
+	 config.si_locked_AXIAddr,
+	 config.si_locked_MASK,
+	 Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK);//SI_CONFIG_BASE_ADDR);
   
-  //enable the SI chip
-  Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
-
+  
+  //Disable the output of the SI chip
+  if(config.si_oe_AXIAddr != 0){
+    Xil_Out32(config.si_oe_AXIAddr,
+	      (Xil_In32(config.si_oe_AXIAddr) & (~config.si_oe_MASK)));
+  }
+  //Enable the chip
+  if(config.si_enable_AXIAddr != 0){
+    Xil_Out32(config.si_enable_AXIAddr,
+	      (Xil_In32(config.si_enable_AXIAddr) | (config.si_enable_MASK)));
+  }
   
   u16 iWrite=0;
-  //write the first 5 i2c writes to reset the chip
-  for(; iWrite < 5 ;iWrite++){
-    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
-	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  //write the first config.configDataInitSize i2c writes to reset the chip (usually 5)
+  for(; iWrite < config.data_init_size ;iWrite++){
+    SiI2cWrite(config.i2c_AXIBaseAddr,
+	       config.i2c_address,
+	       (u8)((config.data[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((config.data[iWrite]     ) & 0xFF));
   }
   //Wait for reset to finish
-  usleep(400000);
+  usleep(config.data_init_usleep);//usuall 400000);
   //Program the SI chip
-  for(; iWrite < (sizeof(ConfigData)/sizeof(u16));iWrite++){
-    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
-	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  for(; iWrite < config.data_size;iWrite++){
+    SiI2cWrite(config.i2c_AXIBaseAddr,
+	       config.i2c_address,
+	       (u8)((config.data[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((config.data[iWrite]     ) & 0xFF));
   }
   PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
   
   //enable the output of the SI chip
-  Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
-  usleep(1000000); //wait 1s
+  if(config.si_oe_AXIAddr != 0){
+    Xil_Out32(config.si_oe_AXIAddr,
+	      (Xil_In32(config.si_oe_AXIAddr) | (config.si_oe_MASK)));
+    usleep(1000000); //wait 1s
+  }
+
   
   u16 tries = 20000;
   //Waitinf for lock
-  while((Xil_In32(SI_CONFIG_BASE_ADDR) & 0x60)){
-    usleep(1000);
-    tries--;
-    if(!tries){
-      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
-      break;
+  if(config.si_locked_AXIAddr != 0){
+    while((Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK)){ //usually 6
+      usleep(1000);
+      tries--;
+      if(!tries){
+	PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
+	break;
+      }
     }
   }
   
-  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
   PRINTF(DEBUG_GENERAL,"========================================\r\n");
   PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   
diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
index 60abc29f9e..a128ba2d30 100644
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
@@ -5,17 +5,40 @@
 extern "C" {
 #endif
 
+#define PRINTF fsbl_printf
+#define SI_I2C_ADDRESS   0xD0
+#define OFFSET_I2C_RX_FIFO_PIRQ (sizeof(u32)*0x46))
+#define OFFSET_I2C_CONTROL      (sizeof(u32)*0x40))
+#define OFFSET_I2C_STATUS       (sizeof(u32)*0x41))
+#define OFFSET_I2C_RX_FIFO      (sizeof(u32)*0x43))
+#define OFFSET_I2C_TX_FIFO      (sizeof(u32)*0x42))
+#define OFFSET_I2C_RESET        (sizeof(u32)*0x10))
+
 #include "fsbl.h"
 #include "xil_types.h"
-#include "AXI_slave_addrs.h"
-  /*serv base*/
-#define SI_CONFIG_BASE_ADDR AXI_ADDR_SERV
-  /*i2c base*/
-#define SI_I2C_BASE_ADDR AXI_ADDR_SI
-void SiI2cWrite(u8 address,u8 data);
 
+  //Code for writing to an si chip via i2c
+  void SiI2cWrite(u32 axi_base_address, u8 i2c_address,u8 address,u8 data);
+
+  //struct for data used to program an SI chip
+  typedef struct {
+    u32 i2c_AXIBaseAddr;         //Base address of the AXI i2c IP
+    u32 si_enable_AXIAddr;       //Address used to enable the SI chip
+    u32 si_enable_MASK;          //Mask of bits used to enable the SI chip
+    u32 si_oe_AXIAddr;           //Address used to enable the SI outputs
+    u32 si_oe_MASK;              //Mask of bits used to enable the SI output
+    u32 si_locked_AXIAddr;       //Address used to check if the SI is locked (0 means don't check)
+    u32 si_locked_MASK;          //Mask of bits used to tell if the SI is locked
+    u16 const * data;            //Data used to config the Si Chip
+    u32 data_init_size;          //number of entrys of config Data to use for init
+    u32 data_size;               //Total number of entries in config Data
+    u32 data_init_usleep;        //uS to sleep after the init data has been written
+    char const * name;           //Name of Si chip being programmed
+    u8  i2c_address;             // address of the si chip's i2c interface
+  } sProgramSI;
 
-void ProgramSI();
+  //call for programming a full SI chip
+  void ProgramSI(sProgramSi config);
 
 #ifdef __cplusplus
 }
-- 
2.34.1


From 4c88457faf74fa8c608c1179d66ad3af5f5e6eb6 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 10:23:41 -0400
Subject: [PATCH 12/31] Missing files

---
 lib/sw_apps/zynq_fsbl/src/si_data.c | 11 +++++++++++
 lib/sw_apps/zynq_fsbl/src/si_data.h | 18 ++++++++++++++++++
 2 files changed, 29 insertions(+)
 create mode 100644 lib/sw_apps/zynq_fsbl/src/si_data.c
 create mode 100644 lib/sw_apps/zynq_fsbl/src/si_data.h

diff --git a/lib/sw_apps/zynq_fsbl/src/si_data.c b/lib/sw_apps/zynq_fsbl/src/si_data.c
new file mode 100644
index 0000000000..7a1b52dc92
--- /dev/null
+++ b/lib/sw_apps/zynq_fsbl/src/si_data.c
@@ -0,0 +1,11 @@
+#include "si_data.h"
+
+
+void __atrribute__((weak)) siConfigInit(){
+  siConfigCount = 0;
+  siConfigs = NULL;
+}
+
+
+
+
diff --git a/lib/sw_apps/zynq_fsbl/src/si_data.h b/lib/sw_apps/zynq_fsbl/src/si_data.h
new file mode 100644
index 0000000000..f1daf79b6c
--- /dev/null
+++ b/lib/sw_apps/zynq_fsbl/src/si_data.h
@@ -0,0 +1,18 @@
+#ifndef __SI_DATA__H_
+#define __SI_DATA__H_
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include "xil_types.h"
+
+  void siConfigInit();
+  u32 siConfigCount;
+  sProgramSI * siConfigs;
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
-- 
2.34.1


From 72e5a43d6a86838ed8467bd5c256402583e40469 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 14:22:32 -0400
Subject: [PATCH 13/31] forgot to add files for the zynqmp bootloader

---
 lib/sw_apps/zynqmp_fsbl/src/si_data.c         |  11 +
 lib/sw_apps/zynqmp_fsbl/src/si_data.h         |  18 ++
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c     |   7 +
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 201 ++++++------------
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h |  42 +++-
 5 files changed, 139 insertions(+), 140 deletions(-)
 create mode 100644 lib/sw_apps/zynqmp_fsbl/src/si_data.c
 create mode 100644 lib/sw_apps/zynqmp_fsbl/src/si_data.h

diff --git a/lib/sw_apps/zynqmp_fsbl/src/si_data.c b/lib/sw_apps/zynqmp_fsbl/src/si_data.c
new file mode 100644
index 0000000000..7a1b52dc92
--- /dev/null
+++ b/lib/sw_apps/zynqmp_fsbl/src/si_data.c
@@ -0,0 +1,11 @@
+#include "si_data.h"
+
+
+void __atrribute__((weak)) siConfigInit(){
+  siConfigCount = 0;
+  siConfigs = NULL;
+}
+
+
+
+
diff --git a/lib/sw_apps/zynqmp_fsbl/src/si_data.h b/lib/sw_apps/zynqmp_fsbl/src/si_data.h
new file mode 100644
index 0000000000..f1daf79b6c
--- /dev/null
+++ b/lib/sw_apps/zynqmp_fsbl/src/si_data.h
@@ -0,0 +1,18 @@
+#ifndef __SI_DATA__H_
+#define __SI_DATA__H_
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include "xil_types.h"
+
+  void siConfigInit();
+  u32 siConfigCount;
+  sProgramSI * siConfigs;
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
index 9887ace2ce..f52ea6e14e 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
@@ -30,6 +30,7 @@
 #include "xfsbl_hooks.h"
 #include "psu_init.h"
 #include "xfsbl_programSI.h"
+#include "si_data.h"        //structures storing si programming data
 /************************** Constant Definitions *****************************/
 
 /**************************** Type Definitions *******************************/
@@ -60,6 +61,12 @@ u32 XFsbl_HookAfterBSDownload(void )
 	/**
 	 * Add the code here
 	 */
+	fsbl_printf(DEBUG_INFO,"In XFsblHookAfterBSDownload function \r\n");
+	//Call the init function to initialize the siconfig structures
+	siConfigInit();
+	for(u32 iConfig = 0; iConfig < siConfigCount;iConfig++){
+	  ProgramSI(siConfigs[iConfig]);
+	}
 	ProgramSI();
 
 	return Status;
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 797c9d205a..777cf5474a 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,120 +1,17 @@
 #include "xfsbl_programSI.h"
 
-#define PRINTF XFsbl_Printf
-
-#define SI_I2C_ADDRESS   0xD0
-#define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
-#define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
-#define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
-#define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
-#define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
-#define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
-
-/*
-I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + 0x118))
-I2C_CONTROL      (SI_I2C_BASE_ADDR + 0x100))
-I2C_STATUS       (SI_I2C_BASE_ADDR + 0x104))
-I2C_RX_FIFO      (SI_I2C_BASE_ADDR + 0x10C))
-I2C_TX_FIFO      (SI_I2C_BASE_ADDR + 0x108))
-I2C_RESET        (SI_I2C_BASE_ADDR + 0x040))
-*/
-
-u16 ConfigData[] = {
-  0x010B, //0xb
-  0x24C0, 0x2500,
-  0x0105, //0x5
-  0x4001,
-  0x0100, //0x0
-  0x0600, 0x0700, 0x0800, 0x0B68, 0x1602, 0x17DC, 0x18EE, 0x19DD,
-  0x1ADF, 0x2B02, 0x2C01, 0x2D01, 0x2E38, 0x2F00, 0x3000, 0x3100,
-  0x3200, 0x3300, 0x3400, 0x3500, 0x3638, 0x3700, 0x3800, 0x3900,
-  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3F11, 0x4004, 0x410D, 0x4200,
-  0x4300, 0x4400, 0x450C, 0x4632, 0x4700, 0x4800, 0x4900, 0x4A32,
-  0x4B00, 0x4C00, 0x4D00, 0x4E05, 0x4F00, 0x500F, 0x5103, 0x5200,
-  0x5300, 0x5400, 0x5503, 0x5600, 0x5700, 0x5800, 0x5901, 0x5AAA,
-  0x5BAA, 0x5C0A, 0x5D01, 0x5E00, 0x5F00, 0x6000, 0x6100, 0x6200,
-  0x6300, 0x6400, 0x6500, 0x6600, 0x6700, 0x6800, 0x6900, 0x9202,
-  0x93A0, 0x9500, 0x9680, 0x9860, 0x9A02, 0x9B60, 0x9D08, 0x9E40,
-  0xA020, 0xA200, 0xA9A7, 0xAA61, 0xAB00, 0xAC00, 0xE521, 0xEA0A,
-  0xEB60, 0xEC00, 0xED00,
-  0x0101, //0x1
-  0x0201, 0x1202, 0x1309, 0x1433, 0x1508, 0x1702, 0x1809, 0x1933,
-  0x1A08, 0x2602, 0x2709, 0x2833, 0x2909, 0x2B02, 0x2C09, 0x2D33,
-  0x2E0A, 0x3F00, 0x4000, 0x4140, 0x42FF,
-  0x0102, //0x2
-  0x0600, 0x0832, 0x0900, 0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E01,
-  0x0F00, 0x1000, 0x1100, 0x1200, 0x1300, 0x1400, 0x1500, 0x1600,
-  0x1700, 0x1800, 0x1900, 0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00,
-  0x1F00, 0x2000, 0x2100, 0x2200, 0x2300, 0x2400, 0x2500, 0x2600,
-  0x2700, 0x2800, 0x2900, 0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00,
-  0x2F00, 0x310B, 0x320B, 0x330B, 0x340B, 0x3500, 0x3600, 0x3700,
-  0x38C0, 0x39DA, 0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3EC0, 0x5003,
-  0x5100, 0x5200, 0x5304, 0x5400, 0x5500, 0x5C02, 0x5D00, 0x5E00,
-  0x5F02, 0x6000, 0x6100, 0x6B41, 0x6C50, 0x6D4F, 0x6E4C, 0x6F4C,
-  0x704F, 0x7153, 0x724D, 0x8A00, 0x8B00, 0x8C00, 0x8D00, 0x8E00,
-  0x8F00, 0x9000, 0x9100, 0x94B0, 0x9602, 0x9702, 0x9902, 0x9DFA,
-  0x9E01, 0x9F00, 0xA9CC, 0xAA04, 0xAB00, 0xB7FF, 0x0103, 0x0200,
-  0x0300, 0x0400, 0x0500, 0x0607, 0x0700, 0x0800, 0x0900, 0x0A00,
-  0x0B80, 0x0C00, 0x0D00, 0x0E00, 0x0FEC, 0x1060, 0x1121, 0x1200,
-  0x1300, 0x14B8, 0x15C6, 0x1692, 0x1700, 0x1800, 0x19C0, 0x1A49,
-  0x1B6E, 0x1C0A, 0x1D00, 0x1E00, 0x1F8B, 0x2077, 0x21B7, 0x2200,
-  0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900, 0x2A00,
-  0x2B00, 0x2C00, 0x2D00, 0x3800, 0x391F, 0x3B00, 0x3C00, 0x3D00,
-  0x3E00, 0x3F00, 0x4000, 0x4100, 0x4200, 0x4300, 0x4400, 0x4500,
-  0x4600, 0x4700, 0x4800, 0x4900, 0x4A00, 0x4B00, 0x4C00, 0x4D00,
-  0x4E00, 0x4F00, 0x5000, 0x5100, 0x5200, 0x5900, 0x5A00, 0x5B00,
-  0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000,
-  0x0104, //0x4
-  0x8700,
-  0x0105, //0x5
-  0x0813, 0x0922, 0x0A0C, 0x0B0B, 0x0C07, 0x0D3F, 0x0E16, 0x0F2A, 
-  0x1009, 0x1108, 0x1207, 0x133F, 0x1500, 0x1600, 0x1700, 0x1800,
-  0x19BC, 0x1A02, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F80, 0x212B,
-  0x2A01, 0x2B01, 0x2C87, 0x2D03, 0x2E19, 0x2F19, 0x3100, 0x3242,
-  0x3303, 0x3400, 0x3500, 0x3604, 0x3700, 0x3800, 0x3900, 0x3A02,
-  0x3B03, 0x3C00, 0x3D11, 0x3E06, 0x890D, 0x8A00, 0x9BFA, 0x9D13,
-  0x9E24, 0x9F0C, 0xA00B, 0xA107, 0xA23F, 0xA603,
-  0x0108, //0x8
-  0x0235, 0x0305, 0x0400, 0x0500, 0x0600, 0x0700, 0x0800, 0x0900,
-  0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E00, 0x0F00, 0x1000, 0x1100,
-  0x1200, 0x1300, 0x1400, 0x1500, 0x1600, 0x1700, 0x1800, 0x1900,
-  0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F00, 0x2000, 0x2100,
-  0x2200, 0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900,
-  0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00, 0x2F00, 0x3000, 0x3100,
-  0x3200, 0x3300, 0x3400, 0x3500, 0x3600, 0x3700, 0x3800, 0x3900,
-  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3E00, 0x3F00, 0x4000, 0x4100,
-  0x4200, 0x4300, 0x4400, 0x4500, 0x4600, 0x4700, 0x4800, 0x4900,
-  0x4A00, 0x4B00, 0x4C00, 0x4D00, 0x4E00, 0x4F00, 0x5000, 0x5100,
-  0x5200, 0x5300, 0x5400, 0x5500, 0x5600, 0x5700, 0x5800, 0x5900,
-  0x5A00, 0x5B00, 0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000, 0x6100,
-  0x0109, //0x9
-  0x0E02, 0x4300, 0x4901, 0x4A01, 0x4E49, 0x4F02, 0x5E00,
-  0x010A, //0xA
-  0x0200, 0x0307, 0x0401, 0x0507, 0x1400, 0x1A00, 0x2000, 0x2600,
-  0x010B, //0xb
-  0x442F, 0x4600, 0x470E, 0x480E, 0x4A08, 0x570E, 0x5801,
-  0x0105, //0x5
-  0x1401,
-  0x0100, //0x0
-  0x1C01,
-  0x0105, //0x5
-  0x4000,
-  0x010B, //0xb
-  0x24C3, 0x2502};
-
-
-void SiI2cWrite(u8 address,u8 data){
-  Xil_Out32(I2C_RESET    , 0xA);
-  Xil_Out32(I2C_CONTROL  , 0x2);
-  Xil_Out32(I2C_CONTROL  , 0xC);
-  Xil_Out32(I2C_TX_FIFO  , 0x100 | ((u32)SI_I2C_ADDRESS));
-  Xil_Out32(I2C_TX_FIFO  , (u32) address);
-  Xil_Out32(I2C_TX_FIFO  , 0x200 | ((u32)data));
-  Xil_Out32(I2C_CONTROL  , 0xD);
+void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
+  Xil_Out32(axi_base_address + OFFSET_I2C_RESET    , 0xA);
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  , 0x2);
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  , 0xC);
+  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  , 0x100 | ((u32)i2c_address));
+  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  , (u32) address);
+  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  , 0x200 | ((u32)data));
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  , 0xD);
   u16 tries = 20000;
   //Time out of something isn't working
   //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
-  while((Xil_In32(I2C_STATUS) & 0x4)){
+  while((Xil_In32(axi_base_address+OFFSET_I2C_STATUS) & 0x4)){
     tries--;
     if(!tries){
       PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
@@ -122,47 +19,85 @@ void SiI2cWrite(u8 address,u8 data){
     }
   }
   //  usleep(50);
-  Xil_Out32(I2C_CONTROL, 0x0);
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL, 0x0);
 
   //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
 }
 
 
-void ProgramSI(){
+void ProgramSI(sProgramSi config){
   /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
   PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   PRINTF(DEBUG_GENERAL,"========================================\r\n");
-  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
-  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(DEBUG_GENERAL,"Programming %s \r\n",
+	 config.name);
+  PRINTF(DEBUG_GENERAL,"AXI I2C   @ 0x%08X \r\n",
+	 config.i2c_AXIBaseAddr);//SI_I2C_BASE_ADDR);
+  PRINTF(DEBUG_GENERAL,"Si enable        @ 0x%08X(0x%08X) Val: 0x%08X \r\n",
+	 config.si_enable_AXIAddr,
+	 config.si_enable_MASK,
+	 Xil_In32(config.si_enable_AXIAddr) & config.si_enable_MASK);//SI_CONFIG_BASE_ADDR);
+  PRINTF(DEBUG_GENERAL,"Si output enable @ 0x%08X(0x%08X) Val: 0x%08X \r\n",
+	 config.si_oe_AXIAddr,
+	 config.si_oe_MASK,
+	 Xil_In32(config.si_oe_AXIAddr) & config.si_oe_MASK);//SI_CONFIG_BASE_ADDR);
+  PRINTF(DEBUG_GENERAL,"Si locked        @ 0x%08X(0x%08X) Val: 0x%08X \r\n",
+	 config.si_locked_AXIAddr,
+	 config.si_locked_MASK,
+	 Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK);//SI_CONFIG_BASE_ADDR);
+  
+  
+  //Disable the output of the SI chip
+  if(config.si_oe_AXIAddr != 0){
+    Xil_Out32(config.si_oe_AXIAddr,
+	      (Xil_In32(config.si_oe_AXIAddr) & (~config.si_oe_MASK)));
+  }
+  //Enable the chip
+  if(config.si_enable_AXIAddr != 0){
+    Xil_Out32(config.si_enable_AXIAddr,
+	      (Xil_In32(config.si_enable_AXIAddr) | (config.si_enable_MASK)));
+  }
   
-  Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
   u16 iWrite=0;
-  for(; iWrite < 5 ;iWrite++){
-    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
-	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  //write the first config.configDataInitSize i2c writes to reset the chip (usually 5)
+  for(; iWrite < config.data_init_size ;iWrite++){
+    SiI2cWrite(config.i2c_AXIBaseAddr,
+	       config.i2c_address,
+	       (u8)((config.data[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((config.data[iWrite]     ) & 0xFF));
   }
-  usleep(400000);
-  for(; iWrite < (sizeof(ConfigData)/sizeof(u16));iWrite++){
-    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
-	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  //Wait for reset to finish
+  usleep(config.data_init_usleep);//usuall 400000);
+  //Program the SI chip
+  for(; iWrite < config.data_size;iWrite++){
+    SiI2cWrite(config.i2c_AXIBaseAddr,
+	       config.i2c_address,
+	       (u8)((config.data[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((config.data[iWrite]     ) & 0xFF));
   }
   PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
   
-  Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
-  usleep(1000000); //wait 1s
+  //enable the output of the SI chip
+  if(config.si_oe_AXIAddr != 0){
+    Xil_Out32(config.si_oe_AXIAddr,
+	      (Xil_In32(config.si_oe_AXIAddr) | (config.si_oe_MASK)));
+    usleep(1000000); //wait 1s
+  }
+
   
   u16 tries = 20000;
   //Waitinf for lock
-  while((Xil_In32(SI_CONFIG_BASE_ADDR) & 0x60)){
-    usleep(1000);
-    tries--;
-    if(!tries){
-      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
-      break;
+  if(config.si_locked_AXIAddr != 0){
+    while((Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK)){ //usually 6
+      usleep(1000);
+      tries--;
+      if(!tries){
+	PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
+	break;
+      }
     }
   }
   
-  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
   PRINTF(DEBUG_GENERAL,"========================================\r\n");
   PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
index 118b53ee7e..0cad296830 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -5,17 +5,45 @@
 extern "C" {
 #endif
 
+#define PRINTF fsbl_printf
+#define SI_I2C_ADDRESS   0xD0
+#define OFFSET_I2C_RX_FIFO_PIRQ (sizeof(u32)*0x46))
+#define OFFSET_I2C_CONTROL      (sizeof(u32)*0x40))
+#define OFFSET_I2C_STATUS       (sizeof(u32)*0x41))
+#define OFFSET_I2C_RX_FIFO      (sizeof(u32)*0x43))
+#define OFFSET_I2C_TX_FIFO      (sizeof(u32)*0x42))
+#define OFFSET_I2C_RESET        (sizeof(u32)*0x10))
+
 #include "xfsbl_hw.h"
+#include "fsbl.h"
 #include "xil_types.h"
-#include "AXI_slave_addrs.h"
-  /*serv base*/
-#define SI_CONFIG_BASE_ADDR AXI_ADDR_SERV
-  /*i2c base*/
-#define SI_I2C_BASE_ADDR AXI_ADDR_SI
-void SiI2cWrite(u8 address,u8 data);
+
+  //Code for writing to an si chip via i2c
+  void SiI2cWrite(u32 axi_base_address, u8 i2c_address,u8 address,u8 data);
+
+  //struct for data used to program an SI chip
+  typedef struct {
+    u32 i2c_AXIBaseAddr;         //Base address of the AXI i2c IP
+    u32 si_enable_AXIAddr;       //Address used to enable the SI chip
+    u32 si_enable_MASK;          //Mask of bits used to enable the SI chip
+    u32 si_oe_AXIAddr;           //Address used to enable the SI outputs
+    u32 si_oe_MASK;              //Mask of bits used to enable the SI output
+    u32 si_locked_AXIAddr;       //Address used to check if the SI is locked (0 means don't check)
+    u32 si_locked_MASK;          //Mask of bits used to tell if the SI is locked
+    u16 const * data;            //Data used to config the Si Chip
+    u32 data_init_size;          //number of entrys of config Data to use for init
+    u32 data_size;               //Total number of entries in config Data
+    u32 data_init_usleep;        //uS to sleep after the init data has been written
+    char const * name;           //Name of Si chip being programmed
+    u8  i2c_address;             // address of the si chip's i2c interface
+  } sProgramSI;
+
+  //call for programming a full SI chip
+  void ProgramSI(sProgramSi config);
+
+
 
 
-void ProgramSI();
 
 #ifdef __cplusplus
 }
-- 
2.34.1


From baa3697c9e95e1d09cd0d1418bd5d6ef37c65d5f Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 15:03:02 -0400
Subject: [PATCH 14/31] Mising include in si_data.h

---
 lib/sw_apps/zynq_fsbl/src/si_data.h   | 1 +
 lib/sw_apps/zynqmp_fsbl/src/si_data.h | 1 +
 2 files changed, 2 insertions(+)

diff --git a/lib/sw_apps/zynq_fsbl/src/si_data.h b/lib/sw_apps/zynq_fsbl/src/si_data.h
index f1daf79b6c..62fc18723e 100644
--- a/lib/sw_apps/zynq_fsbl/src/si_data.h
+++ b/lib/sw_apps/zynq_fsbl/src/si_data.h
@@ -6,6 +6,7 @@ extern "C" {
 #endif
 
 #include "xil_types.h"
+#include "xfsbl_programSI.h"
 
   void siConfigInit();
   u32 siConfigCount;
diff --git a/lib/sw_apps/zynqmp_fsbl/src/si_data.h b/lib/sw_apps/zynqmp_fsbl/src/si_data.h
index f1daf79b6c..62fc18723e 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/si_data.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/si_data.h
@@ -6,6 +6,7 @@ extern "C" {
 #endif
 
 #include "xil_types.h"
+#include "xfsbl_programSI.h"
 
   void siConfigInit();
   u32 siConfigCount;
-- 
2.34.1


From b9802981297b3e4061907c6fe4b445d6d8d977d0 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 16:40:59 -0400
Subject: [PATCH 15/31] removed extra include in zynqmp

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h | 1 -
 1 file changed, 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
index 0cad296830..a3f6945d05 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -15,7 +15,6 @@ extern "C" {
 #define OFFSET_I2C_RESET        (sizeof(u32)*0x10))
 
 #include "xfsbl_hw.h"
-#include "fsbl.h"
 #include "xil_types.h"
 
   //Code for writing to an si chip via i2c
-- 
2.34.1


From 3f03a7cb5e2985cf27d38bd7d0cef2f9d354479e Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 17:08:54 -0400
Subject: [PATCH 16/31] bad syntax

---
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h    | 2 +-
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
index a128ba2d30..f8ac057955 100644
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
@@ -38,7 +38,7 @@ extern "C" {
   } sProgramSI;
 
   //call for programming a full SI chip
-  void ProgramSI(sProgramSi config);
+  void ProgramSI(sProgramSI config);
 
 #ifdef __cplusplus
 }
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
index a3f6945d05..2d9b846476 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -38,7 +38,7 @@ extern "C" {
   } sProgramSI;
 
   //call for programming a full SI chip
-  void ProgramSI(sProgramSi config);
+  void ProgramSI(sProgramSI config);
 
 
 
-- 
2.34.1


From 84e52ad9401de14c8138c01a3ef89481ad09397c Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 22:00:26 -0400
Subject: [PATCH 17/31] weird errors

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 777cf5474a..bd7489b23b 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,17 +1,17 @@
 #include "xfsbl_programSI.h"
 
 void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
-  Xil_Out32(axi_base_address + OFFSET_I2C_RESET    , 0xA);
-  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  , 0x2);
-  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  , 0xC);
-  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  , 0x100 | ((u32)i2c_address));
-  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  , (u32) address);
-  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  , 0x200 | ((u32)data));
-  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  , 0xD);
+  Xil_Out32((axi_base_address + OFFSET_I2C_RESET  )  , 0xA);
+  Xil_Out32((axi_base_address + OFFSET_I2C_CONTROL)  , 0x2);
+  Xil_Out32((axi_base_address + OFFSET_I2C_CONTROL)  , 0xC);
+  Xil_Out32((axi_base_address + OFFSET_I2C_TX_FIFO)  , 0x100 | ((u32)i2c_address));
+  Xil_Out32((axi_base_address + OFFSET_I2C_TX_FIFO)  , (u32) address);
+  Xil_Out32((axi_base_address + OFFSET_I2C_TX_FIFO)  , 0x200 | ((u32)data));
+  Xil_Out32((axi_base_address + OFFSET_I2C_CONTROL)  , 0xD);
   u16 tries = 20000;
   //Time out of something isn't working
   //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
-  while((Xil_In32(axi_base_address+OFFSET_I2C_STATUS) & 0x4)){
+  while( (Xil_In32( ( axi_base_address+OFFSET_I2C_STATUS ) ) & 0x4 ) ){
     tries--;
     if(!tries){
       PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
@@ -19,7 +19,7 @@ void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
     }
   }
   //  usleep(50);
-  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL, 0x0);
+  Xil_Out32((axi_base_address + OFFSET_I2C_CONTROL), 0x0);
 
   //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
 }
-- 
2.34.1


From 49d8a78cd3a4f3e7b3a137e74ae06094be708acb Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 22:28:00 -0400
Subject: [PATCH 18/31] stupid errors

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index bd7489b23b..a270cacb9f 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,13 +1,13 @@
 #include "xfsbl_programSI.h"
 
 void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
-  Xil_Out32((axi_base_address + OFFSET_I2C_RESET  )  , 0xA);
-  Xil_Out32((axi_base_address + OFFSET_I2C_CONTROL)  , 0x2);
-  Xil_Out32((axi_base_address + OFFSET_I2C_CONTROL)  , 0xC);
-  Xil_Out32((axi_base_address + OFFSET_I2C_TX_FIFO)  , 0x100 | ((u32)i2c_address));
-  Xil_Out32((axi_base_address + OFFSET_I2C_TX_FIFO)  , (u32) address);
-  Xil_Out32((axi_base_address + OFFSET_I2C_TX_FIFO)  , 0x200 | ((u32)data));
-  Xil_Out32((axi_base_address + OFFSET_I2C_CONTROL)  , 0xD);
+  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_RESET  )  ,(u32)(0xA));
+  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)(0x2));
+  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)(0xC));
+  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)(0x100 | ((u32)i2c_address)));
+  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)((u32) address));
+  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)(0x200 | ((u32)data)));
+  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)( 0xD));
   u16 tries = 20000;
   //Time out of something isn't working
   //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
-- 
2.34.1


From 364be313187626ceb4314d06e29939da0517c948 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 22:45:35 -0400
Subject: [PATCH 19/31] stupid errors

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index a270cacb9f..8701dad456 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,13 +1,13 @@
 #include "xfsbl_programSI.h"
 
 void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
-  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_RESET  )  ,(u32)(0xA));
-  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)(0x2));
-  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)(0xC));
-  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)(0x100 | ((u32)i2c_address)));
-  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)((u32) address));
-  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)(0x200 | ((u32)data)));
-  Xil_Out32(UINTPTR(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)( 0xD));
+  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_RESET  )  ,(u32)(0xA));
+  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)(0x2));
+  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)(0xC));
+  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)(0x100 | ((u32)i2c_address)));
+  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)((u32) address));
+  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)(0x200 | ((u32)data)));
+  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)( 0xD));
   u16 tries = 20000;
   //Time out of something isn't working
   //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
-- 
2.34.1


From 0de2f794843a64a0ad515be9ca563e8c5070a638 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 14 Mar 2022 23:01:23 -0400
Subject: [PATCH 20/31] stupid errors

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 14 +++++++-------
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h | 10 ++++++----
 2 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 8701dad456..aa843497f1 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,13 +1,13 @@
 #include "xfsbl_programSI.h"
 
 void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
-  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_RESET  )  ,(u32)(0xA));
-  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)(0x2));
-  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)(0xC));
-  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)(0x100 | ((u32)i2c_address)));
-  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)((u32) address));
-  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_TX_FIFO)  ,(u32)(0x200 | ((u32)data)));
-  Xil_Out32((UINTPTR)(axi_base_address + OFFSET_I2C_CONTROL)  ,(u32)( 0xD));
+  Xil_Out32(axi_base_address + OFFSET_I2C_RESET    ,(u32) 0xA);
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  ,(u32)0x2);
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  ,(u32)0xC);
+  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  ,(u32)(0x100 | (u32)i2c_address));
+  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  ,(u32) address );
+  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  ,(u32)(0x200 | (u32)data));
+  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  ,(u32) 0xD);
   u16 tries = 20000;
   //Time out of something isn't working
   //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
index 2d9b846476..9c6186ea91 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -1,10 +1,6 @@
 #ifndef XFSBL_PROGRAMSI_H
 #define XFSBL_PROGRAMSI_H
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 #define PRINTF fsbl_printf
 #define SI_I2C_ADDRESS   0xD0
 #define OFFSET_I2C_RX_FIFO_PIRQ (sizeof(u32)*0x46))
@@ -17,6 +13,12 @@ extern "C" {
 #include "xfsbl_hw.h"
 #include "xil_types.h"
 
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+
   //Code for writing to an si chip via i2c
   void SiI2cWrite(u32 axi_base_address, u8 i2c_address,u8 address,u8 data);
 
-- 
2.34.1


From eb1b34d0e2fed7093cdbd52e3a9c8ac6f8343ac5 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 15 Mar 2022 09:27:12 -0400
Subject: [PATCH 21/31] stupid errors

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 7 +++++++
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h | 7 -------
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index aa843497f1..b381217ca1 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,5 +1,12 @@
 #include "xfsbl_programSI.h"
 
+#define OFFSET_I2C_RX_FIFO_PIRQ (sizeof(u32)*0x46))
+#define OFFSET_I2C_CONTROL      (sizeof(u32)*0x40))
+#define OFFSET_I2C_STATUS       (sizeof(u32)*0x41))
+#define OFFSET_I2C_RX_FIFO      (sizeof(u32)*0x43))
+#define OFFSET_I2C_TX_FIFO      (sizeof(u32)*0x42))
+#define OFFSET_I2C_RESET        (sizeof(u32)*0x10))
+
 void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
   Xil_Out32(axi_base_address + OFFSET_I2C_RESET    ,(u32) 0xA);
   Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  ,(u32)0x2);
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
index 9c6186ea91..47804f6cf8 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -2,13 +2,6 @@
 #define XFSBL_PROGRAMSI_H
 
 #define PRINTF fsbl_printf
-#define SI_I2C_ADDRESS   0xD0
-#define OFFSET_I2C_RX_FIFO_PIRQ (sizeof(u32)*0x46))
-#define OFFSET_I2C_CONTROL      (sizeof(u32)*0x40))
-#define OFFSET_I2C_STATUS       (sizeof(u32)*0x41))
-#define OFFSET_I2C_RX_FIFO      (sizeof(u32)*0x43))
-#define OFFSET_I2C_TX_FIFO      (sizeof(u32)*0x42))
-#define OFFSET_I2C_RESET        (sizeof(u32)*0x10))
 
 #include "xfsbl_hw.h"
 #include "xil_types.h"
-- 
2.34.1


From ddb67a64d8f5f9afbced41da78858df6a774e16a Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 15 Mar 2022 09:36:49 -0400
Subject: [PATCH 22/31] stupid errors

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index b381217ca1..8526e7638e 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -32,7 +32,7 @@ void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
 }
 
 
-void ProgramSI(sProgramSi config){
+void ProgramSI(sProgramSI config){
   /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
   PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   PRINTF(DEBUG_GENERAL,"========================================\r\n");
-- 
2.34.1


From 48b02bd6ccff14111add4dbfd5ed6975155b0f4f Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 15 Mar 2022 09:39:29 -0400
Subject: [PATCH 23/31] stupid errors

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 25 +++++++++++++------
 1 file changed, 18 insertions(+), 7 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 8526e7638e..cd1f0d2f9c 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -8,13 +8,24 @@
 #define OFFSET_I2C_RESET        (sizeof(u32)*0x10))
 
 void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
-  Xil_Out32(axi_base_address + OFFSET_I2C_RESET    ,(u32) 0xA);
-  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  ,(u32)0x2);
-  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  ,(u32)0xC);
-  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  ,(u32)(0x100 | (u32)i2c_address));
-  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  ,(u32) address );
-  Xil_Out32(axi_base_address + OFFSET_I2C_TX_FIFO  ,(u32)(0x200 | (u32)data));
-  Xil_Out32(axi_base_address + OFFSET_I2C_CONTROL  ,(u32) 0xD);
+  
+
+  UINTPTR addr_I2C_RESET   = axi_base_address + OFFSET_I2C_RESET  ;
+  UINTPTR addr_I2C_CONTROL = axi_base_address + OFFSET_I2C_CONTROL;
+  UINTPTR addr_I2C_CONTROL = axi_base_address + OFFSET_I2C_CONTROL;
+  UINTPTR addr_I2C_TX_FIFO = axi_base_address + OFFSET_I2C_TX_FIFO;
+  UINTPTR addr_I2C_TX_FIFO = axi_base_address + OFFSET_I2C_TX_FIFO;
+  UINTPTR addr_I2C_TX_FIFO = axi_base_address + OFFSET_I2C_TX_FIFO;
+  UINTPTR addr_I2C_CONTROL = axi_base_address + OFFSET_I2C_CONTROL;
+
+
+  Xil_Out32(addr_I2C_RESET    ,(u32) 0xA);
+  Xil_Out32(addr_I2C_CONTROL  ,(u32)0x2);
+  Xil_Out32(addr_I2C_CONTROL  ,(u32)0xC);
+  Xil_Out32(addr_I2C_TX_FIFO  ,(u32)(0x100 | (u32)i2c_address));
+  Xil_Out32(addr_I2C_TX_FIFO  ,(u32) address );
+  Xil_Out32(addr_I2C_TX_FIFO  ,(u32)(0x200 | (u32)data));
+  Xil_Out32(addr_I2C_CONTROL  ,(u32) 0xD);
   u16 tries = 20000;
   //Time out of something isn't working
   //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
-- 
2.34.1


From 0a9a5179b26e5b9ac49884a8ccac41a5b1f29fb4 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 15 Mar 2022 09:48:32 -0400
Subject: [PATCH 24/31] stupid errors

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index cd1f0d2f9c..28fc9afb10 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,11 +1,11 @@
 #include "xfsbl_programSI.h"
 
-#define OFFSET_I2C_RX_FIFO_PIRQ (sizeof(u32)*0x46))
-#define OFFSET_I2C_CONTROL      (sizeof(u32)*0x40))
-#define OFFSET_I2C_STATUS       (sizeof(u32)*0x41))
-#define OFFSET_I2C_RX_FIFO      (sizeof(u32)*0x43))
-#define OFFSET_I2C_TX_FIFO      (sizeof(u32)*0x42))
-#define OFFSET_I2C_RESET        (sizeof(u32)*0x10))
+#define OFFSET_I2C_RX_FIFO_PIRQ (sizeof(u32)*0x46)
+#define OFFSET_I2C_CONTROL      (sizeof(u32)*0x40)
+#define OFFSET_I2C_STATUS       (sizeof(u32)*0x41)
+#define OFFSET_I2C_RX_FIFO      (sizeof(u32)*0x43)
+#define OFFSET_I2C_TX_FIFO      (sizeof(u32)*0x42)
+#define OFFSET_I2C_RESET        (sizeof(u32)*0x10)
 
 void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
   
-- 
2.34.1


From 38b694ccd73cd6eec756b1a3ff586a063d1b066a Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 15 Mar 2022 10:00:16 -0400
Subject: [PATCH 25/31] stupid errors

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 10 +++-------
 1 file changed, 3 insertions(+), 7 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 28fc9afb10..280db558e1 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -12,12 +12,8 @@ void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
 
   UINTPTR addr_I2C_RESET   = axi_base_address + OFFSET_I2C_RESET  ;
   UINTPTR addr_I2C_CONTROL = axi_base_address + OFFSET_I2C_CONTROL;
-  UINTPTR addr_I2C_CONTROL = axi_base_address + OFFSET_I2C_CONTROL;
-  UINTPTR addr_I2C_TX_FIFO = axi_base_address + OFFSET_I2C_TX_FIFO;
-  UINTPTR addr_I2C_TX_FIFO = axi_base_address + OFFSET_I2C_TX_FIFO;
   UINTPTR addr_I2C_TX_FIFO = axi_base_address + OFFSET_I2C_TX_FIFO;
-  UINTPTR addr_I2C_CONTROL = axi_base_address + OFFSET_I2C_CONTROL;
-
+  UINTPTR addr_I2C_STATUS  = axi_base_address + OFFSET_I2C_STATUS;
 
   Xil_Out32(addr_I2C_RESET    ,(u32) 0xA);
   Xil_Out32(addr_I2C_CONTROL  ,(u32)0x2);
@@ -29,7 +25,7 @@ void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
   u16 tries = 20000;
   //Time out of something isn't working
   //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
-  while( (Xil_In32( ( axi_base_address+OFFSET_I2C_STATUS ) ) & 0x4 ) ){
+  while( (Xil_In32( addr_I2C_STATUS ) & 0x4 ) ){
     tries--;
     if(!tries){
       PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
@@ -37,7 +33,7 @@ void SiI2cWrite(u32 axi_base_address, u8 i2c_address, u8 address,u8 data){
     }
   }
   //  usleep(50);
-  Xil_Out32((axi_base_address + OFFSET_I2C_CONTROL), 0x0);
+  Xil_Out32(addr_I2C_CONTROL, 0x0);
 
   //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
 }
-- 
2.34.1


From debb816b13c90fca98c6a02660432191fd91aa3b Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 15 Mar 2022 10:11:55 -0400
Subject: [PATCH 26/31] stupid mistakes

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
index f52ea6e14e..cde17a431d 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
@@ -67,7 +67,6 @@ u32 XFsbl_HookAfterBSDownload(void )
 	for(u32 iConfig = 0; iConfig < siConfigCount;iConfig++){
 	  ProgramSI(siConfigs[iConfig]);
 	}
-	ProgramSI();
 
 	return Status;
 }
-- 
2.34.1


From 917701e1cc470a0f511e505c6723a10417f52939 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 15 Mar 2022 10:25:11 -0400
Subject: [PATCH 27/31] stupid mistakes

---
 lib/sw_apps/zynqmp_fsbl/src/si_data.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/si_data.c b/lib/sw_apps/zynqmp_fsbl/src/si_data.c
index 7a1b52dc92..d1ae239944 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/si_data.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/si_data.c
@@ -1,7 +1,7 @@
 #include "si_data.h"
 
 
-void __atrribute__((weak)) siConfigInit(){
+void __attribute__((weak)) siConfigInit(){
   siConfigCount = 0;
   siConfigs = NULL;
 }
-- 
2.34.1


From 8f0fc4ebb1713d07d5a69f5363426e7374e486b8 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 15 Mar 2022 10:37:55 -0400
Subject: [PATCH 28/31] stupid mistakes

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c     | 1 -
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h | 2 +-
 2 files changed, 1 insertion(+), 2 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
index cde17a431d..44d93d2db7 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
@@ -61,7 +61,6 @@ u32 XFsbl_HookAfterBSDownload(void )
 	/**
 	 * Add the code here
 	 */
-	fsbl_printf(DEBUG_INFO,"In XFsblHookAfterBSDownload function \r\n");
 	//Call the init function to initialize the siconfig structures
 	siConfigInit();
 	for(u32 iConfig = 0; iConfig < siConfigCount;iConfig++){
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
index 47804f6cf8..97cb26ecfd 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -1,7 +1,7 @@
 #ifndef XFSBL_PROGRAMSI_H
 #define XFSBL_PROGRAMSI_H
 
-#define PRINTF fsbl_printf
+#define PRINTF XFsbl_Printf
 
 #include "xfsbl_hw.h"
 #include "xil_types.h"
-- 
2.34.1


From 7fc471c14c91cbac92b57b66fd2dc8693ce930fc Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Wed, 16 Mar 2022 16:04:10 -0400
Subject: [PATCH 29/31] Adjusted output to help debug

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 27 ++++++++++++-------
 1 file changed, 18 insertions(+), 9 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 280db558e1..2a45ac1a02 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -47,18 +47,21 @@ void ProgramSI(sProgramSI config){
 	 config.name);
   PRINTF(DEBUG_GENERAL,"AXI I2C   @ 0x%08X \r\n",
 	 config.i2c_AXIBaseAddr);//SI_I2C_BASE_ADDR);
-  PRINTF(DEBUG_GENERAL,"Si enable        @ 0x%08X(0x%08X) Val: 0x%08X \r\n",
+  PRINTF(DEBUG_GENERAL,"Si enable        @ 0x%08X(0x%08X)\r\n",
 	 config.si_enable_AXIAddr,
-	 config.si_enable_MASK,
-	 Xil_In32(config.si_enable_AXIAddr) & config.si_enable_MASK);//SI_CONFIG_BASE_ADDR);
-  PRINTF(DEBUG_GENERAL,"Si output enable @ 0x%08X(0x%08X) Val: 0x%08X \r\n",
+	 config.si_enable_MASK);
+  PRINTF(DEBUG_GENERAL,"                 Val:        (0x%08X)\r\n",
+	 Xil_In32(config.si_enable_AXIAddr) & config.si_enable_MASK);
+  PRINTF(DEBUG_GENERAL,"Si output enable @ 0x%08X(0x%08X)\r\n",
 	 config.si_oe_AXIAddr,
-	 config.si_oe_MASK,
-	 Xil_In32(config.si_oe_AXIAddr) & config.si_oe_MASK);//SI_CONFIG_BASE_ADDR);
-  PRINTF(DEBUG_GENERAL,"Si locked        @ 0x%08X(0x%08X) Val: 0x%08X \r\n",
+	 config.si_oe_MASK);
+  PRINTF(DEBUG_GENERAL,"                 Val:        (0x%08X)\r\n",
+	 Xil_In32(config.si_oe_AXIAddr) & config.si_oe_MASK);
+  PRINTF(DEBUG_GENERAL,"Si lock          @ 0x%08X(0x%08X)\r\n",
 	 config.si_locked_AXIAddr,
-	 config.si_locked_MASK,
-	 Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK);//SI_CONFIG_BASE_ADDR);
+	 config.si_locked_MASK);
+  PRINTF(DEBUG_GENERAL,"                 Val:        (0x%08X)\r\n",
+	 Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK);
   
   
   //Disable the output of the SI chip
@@ -111,6 +114,12 @@ void ProgramSI(sProgramSI config){
       }
     }
   }
+  PRINTF(DEBUG_GENERAL,"Si lock          @ 0x%08X(0x%08X)\r\n",
+	 config.si_locked_AXIAddr,
+	 config.si_locked_MASK);
+  PRINTF(DEBUG_GENERAL,"                 Val:        (0x%08X)\r\n",
+	 Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK);
+
   
   PRINTF(DEBUG_GENERAL,"========================================\r\n");
   PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
-- 
2.34.1


From 03b2f18d88fd155ec7bc39c48640e897bd461d66 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Wed, 16 Mar 2022 17:20:55 -0400
Subject: [PATCH 30/31] Fixed si locked check

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 2a45ac1a02..c0fe25d2ea 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -105,7 +105,7 @@ void ProgramSI(sProgramSI config){
   u16 tries = 20000;
   //Waitinf for lock
   if(config.si_locked_AXIAddr != 0){
-    while((Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK)){ //usually 6
+    while((Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK) != config.si_locked_MASK){ //usually 6
       usleep(1000);
       tries--;
       if(!tries){
-- 
2.34.1


From 40257399d1bf7f8a8a51286636d7577051c3c7ae Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Wed, 16 Mar 2022 18:22:46 -0400
Subject: [PATCH 31/31] Fixed si locked check

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index c0fe25d2ea..168bacd0c2 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -50,6 +50,9 @@ void ProgramSI(sProgramSI config){
   PRINTF(DEBUG_GENERAL,"Si enable        @ 0x%08X(0x%08X)\r\n",
 	 config.si_enable_AXIAddr,
 	 config.si_enable_MASK);
+  u32 temp = Xil_In32(config.si_enable_AXIAddr);
+  PRINTF(DEBUG_GENERAL,"Test 0x%08X\r\n",temp);
+  
   PRINTF(DEBUG_GENERAL,"                 Val:        (0x%08X)\r\n",
 	 Xil_In32(config.si_enable_AXIAddr) & config.si_enable_MASK);
   PRINTF(DEBUG_GENERAL,"Si output enable @ 0x%08X(0x%08X)\r\n",
@@ -57,7 +60,7 @@ void ProgramSI(sProgramSI config){
 	 config.si_oe_MASK);
   PRINTF(DEBUG_GENERAL,"                 Val:        (0x%08X)\r\n",
 	 Xil_In32(config.si_oe_AXIAddr) & config.si_oe_MASK);
-  PRINTF(DEBUG_GENERAL,"Si lock          @ 0x%08X(0x%08X)\r\n",
+  PRINTF(DEBUG_GENERAL,"Si LOL/S         @ 0x%08X(0x%08X)\r\n",
 	 config.si_locked_AXIAddr,
 	 config.si_locked_MASK);
   PRINTF(DEBUG_GENERAL,"                 Val:        (0x%08X)\r\n",
@@ -105,7 +108,7 @@ void ProgramSI(sProgramSI config){
   u16 tries = 20000;
   //Waitinf for lock
   if(config.si_locked_AXIAddr != 0){
-    while((Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK) != config.si_locked_MASK){ //usually 6
+    while( (Xil_In32(config.si_locked_AXIAddr) & config.si_locked_MASK) ){
       usleep(1000);
       tries--;
       if(!tries){
@@ -114,7 +117,7 @@ void ProgramSI(sProgramSI config){
       }
     }
   }
-  PRINTF(DEBUG_GENERAL,"Si lock          @ 0x%08X(0x%08X)\r\n",
+  PRINTF(DEBUG_GENERAL,"Si LOL/S         @ 0x%08X(0x%08X)\r\n",
 	 config.si_locked_AXIAddr,
 	 config.si_locked_MASK);
   PRINTF(DEBUG_GENERAL,"                 Val:        (0x%08X)\r\n",
-- 
2.34.1

