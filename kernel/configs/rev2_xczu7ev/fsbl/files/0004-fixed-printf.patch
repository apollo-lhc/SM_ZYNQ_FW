From 1d15ee6d6d1d8c3288afad127bec80ca1fc7946d Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 1 Dec 2020 14:38:04 -0500
Subject: [PATCH 4/7] fixed printf

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 9590ca0..608ac19 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,5 +1,7 @@
 #include "xfsbl_programSI.h"
 
+#define PRINTF XFsbl_Printf
+
 #define SI_I2C_ADDRESS   0xD0
 #define SI_I2C_BASE_ADDR 0x41600000
 #define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
@@ -107,22 +109,22 @@ void SiI2cWrite(u8 address,u8 data){
   while((Xil_In32(I2C_STATUS) & 0x4)){
     tries--;
     if(!tries){
-      fsbl_printf(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
+      PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
       break;
     }
   }
   //  usleep(50);
   Xil_Out32(I2C_CONTROL, 0x0);
 
-  //  fsbl_printf(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
+  //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
 }
 
 
 void ProgramSI(){
   /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
-  fsbl_printf(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
-  fsbl_printf(DEBUG_GENERAL,"========================================\r\n");
-  fsbl_printf(DEBUG_GENERAL,"Programming Si-5344 \r\n");
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
   u16 iWrite=0;
@@ -135,7 +137,7 @@ void ProgramSI(){
     SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
 	       (u8)((ConfigData[iWrite]     ) & 0xFF));
   }
-  fsbl_printf(DEBUG_GENERAL,"Waiting for lock\r\n");
+  PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
   usleep(1000000); //wait 1s
@@ -146,13 +148,13 @@ void ProgramSI(){
     usleep(1000);
     tries--;
     if(!tries){
-      fsbl_printf(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
+      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
       break;
     }
   }
   
-  fsbl_printf(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
-  fsbl_printf(DEBUG_GENERAL,"========================================\r\n");
-  fsbl_printf(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   
 }
-- 
1.8.3.1

