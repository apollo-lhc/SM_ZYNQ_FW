From 3a6e647a24e7c92a1cc585d15450f399ca7572e2 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 1 Dec 2020 12:00:52 -0500
Subject: [PATCH 01/15] Addes SI programming

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c     |   4 +
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 172 ++++++++++++++++++++++++++
 2 files changed, 176 insertions(+)
 create mode 100644 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
index b3cb159..510b838 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
@@ -86,6 +86,9 @@ u32 XFsbl_HookAfterBSDownload(void )
 }
 #endif
 
+//hacky I know, but I'm just going to include it directly here
+//update address in xfsbl_programSI.c
+#include "xfsbl_programSI.c"
 u32 XFsbl_HookBeforeHandoff(u32 EarlyHandoff)
 {
 	u32 Status = XFSBL_SUCCESS;
@@ -93,6 +96,7 @@ u32 XFsbl_HookBeforeHandoff(u32 EarlyHandoff)
 	/**
 	 * Add the code here
 	 */
+	ProgramSI();
 
 	return Status;
 }
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
new file mode 100644
index 0000000..4d743b8
--- /dev/null
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -0,0 +1,172 @@
+#define SI_CONFIG_BASE_ADDR 0xA1600000
+
+u32 FsblHookAfterBitstreamDload(void)
+{
+	u32 Status;
+
+	Status = XST_SUCCESS;
+
+	/*
+	 * User logic to be added here.
+	 * Errors to be stored in the status variable and returned
+	 */
+	fsbl_printf(DEBUG_INFO, "In FsblHookAfterBitstreamDload function \r\n");
+
+	return (Status);
+}
+
+u16 ConfigData[] = {
+  0x010B, //0xb
+  0x24C0, 0x2500,
+  0x0105, //0x5
+  0x4001,
+  0x0100, //0x0
+  0x0600, 0x0700, 0x0800, 0x0B68, 0x1602, 0x17DC, 0x18EE, 0x19DD,
+  0x1ADF, 0x2B02, 0x2C01, 0x2D01, 0x2E38, 0x2F00, 0x3000, 0x3100,
+  0x3200, 0x3300, 0x3400, 0x3500, 0x3638, 0x3700, 0x3800, 0x3900,
+  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3F11, 0x4004, 0x410D, 0x4200,
+  0x4300, 0x4400, 0x450C, 0x4632, 0x4700, 0x4800, 0x4900, 0x4A32,
+  0x4B00, 0x4C00, 0x4D00, 0x4E05, 0x4F00, 0x500F, 0x5103, 0x5200,
+  0x5300, 0x5400, 0x5503, 0x5600, 0x5700, 0x5800, 0x5901, 0x5AAA,
+  0x5BAA, 0x5C0A, 0x5D01, 0x5E00, 0x5F00, 0x6000, 0x6100, 0x6200,
+  0x6300, 0x6400, 0x6500, 0x6600, 0x6700, 0x6800, 0x6900, 0x9202,
+  0x93A0, 0x9500, 0x9680, 0x9860, 0x9A02, 0x9B60, 0x9D08, 0x9E40,
+  0xA020, 0xA200, 0xA9A7, 0xAA61, 0xAB00, 0xAC00, 0xE521, 0xEA0A,
+  0xEB60, 0xEC00, 0xED00,
+  0x0101, //0x1
+  0x0201, 0x1202, 0x1309, 0x1433, 0x1508, 0x1702, 0x1809, 0x1933,
+  0x1A08, 0x2602, 0x2709, 0x2833, 0x2909, 0x2B02, 0x2C09, 0x2D33,
+  0x2E0A, 0x3F00, 0x4000, 0x4140, 0x42FF,
+  0x0102, //0x2
+  0x0600, 0x0832, 0x0900, 0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E01,
+  0x0F00, 0x1000, 0x1100, 0x1200, 0x1300, 0x1400, 0x1500, 0x1600,
+  0x1700, 0x1800, 0x1900, 0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00,
+  0x1F00, 0x2000, 0x2100, 0x2200, 0x2300, 0x2400, 0x2500, 0x2600,
+  0x2700, 0x2800, 0x2900, 0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00,
+  0x2F00, 0x310B, 0x320B, 0x330B, 0x340B, 0x3500, 0x3600, 0x3700,
+  0x38C0, 0x39DA, 0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3EC0, 0x5003,
+  0x5100, 0x5200, 0x5304, 0x5400, 0x5500, 0x5C02, 0x5D00, 0x5E00,
+  0x5F02, 0x6000, 0x6100, 0x6B41, 0x6C50, 0x6D4F, 0x6E4C, 0x6F4C,
+  0x704F, 0x7153, 0x724D, 0x8A00, 0x8B00, 0x8C00, 0x8D00, 0x8E00,
+  0x8F00, 0x9000, 0x9100, 0x94B0, 0x9602, 0x9702, 0x9902, 0x9DFA,
+  0x9E01, 0x9F00, 0xA9CC, 0xAA04, 0xAB00, 0xB7FF, 0x0103, 0x0200,
+  0x0300, 0x0400, 0x0500, 0x0607, 0x0700, 0x0800, 0x0900, 0x0A00,
+  0x0B80, 0x0C00, 0x0D00, 0x0E00, 0x0FEC, 0x1060, 0x1121, 0x1200,
+  0x1300, 0x14B8, 0x15C6, 0x1692, 0x1700, 0x1800, 0x19C0, 0x1A49,
+  0x1B6E, 0x1C0A, 0x1D00, 0x1E00, 0x1F8B, 0x2077, 0x21B7, 0x2200,
+  0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900, 0x2A00,
+  0x2B00, 0x2C00, 0x2D00, 0x3800, 0x391F, 0x3B00, 0x3C00, 0x3D00,
+  0x3E00, 0x3F00, 0x4000, 0x4100, 0x4200, 0x4300, 0x4400, 0x4500,
+  0x4600, 0x4700, 0x4800, 0x4900, 0x4A00, 0x4B00, 0x4C00, 0x4D00,
+  0x4E00, 0x4F00, 0x5000, 0x5100, 0x5200, 0x5900, 0x5A00, 0x5B00,
+  0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000,
+  0x0104, //0x4
+  0x8700,
+  0x0105, //0x5
+  0x0813, 0x0922, 0x0A0C, 0x0B0B, 0x0C07, 0x0D3F, 0x0E16, 0x0F2A, 
+  0x1009, 0x1108, 0x1207, 0x133F, 0x1500, 0x1600, 0x1700, 0x1800,
+  0x19BC, 0x1A02, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F80, 0x212B,
+  0x2A01, 0x2B01, 0x2C87, 0x2D03, 0x2E19, 0x2F19, 0x3100, 0x3242,
+  0x3303, 0x3400, 0x3500, 0x3604, 0x3700, 0x3800, 0x3900, 0x3A02,
+  0x3B03, 0x3C00, 0x3D11, 0x3E06, 0x890D, 0x8A00, 0x9BFA, 0x9D13,
+  0x9E24, 0x9F0C, 0xA00B, 0xA107, 0xA23F, 0xA603,
+  0x0108, //0x8
+  0x0235, 0x0305, 0x0400, 0x0500, 0x0600, 0x0700, 0x0800, 0x0900,
+  0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E00, 0x0F00, 0x1000, 0x1100,
+  0x1200, 0x1300, 0x1400, 0x1500, 0x1600, 0x1700, 0x1800, 0x1900,
+  0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F00, 0x2000, 0x2100,
+  0x2200, 0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900,
+  0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00, 0x2F00, 0x3000, 0x3100,
+  0x3200, 0x3300, 0x3400, 0x3500, 0x3600, 0x3700, 0x3800, 0x3900,
+  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3E00, 0x3F00, 0x4000, 0x4100,
+  0x4200, 0x4300, 0x4400, 0x4500, 0x4600, 0x4700, 0x4800, 0x4900,
+  0x4A00, 0x4B00, 0x4C00, 0x4D00, 0x4E00, 0x4F00, 0x5000, 0x5100,
+  0x5200, 0x5300, 0x5400, 0x5500, 0x5600, 0x5700, 0x5800, 0x5900,
+  0x5A00, 0x5B00, 0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000, 0x6100,
+  0x0109, //0x9
+  0x0E02, 0x4300, 0x4901, 0x4A01, 0x4E49, 0x4F02, 0x5E00,
+  0x010A, //0xA
+  0x0200, 0x0307, 0x0401, 0x0507, 0x1400, 0x1A00, 0x2000, 0x2600,
+  0x010B, //0xb
+  0x442F, 0x4600, 0x470E, 0x480E, 0x4A08, 0x570E, 0x5801,
+  0x0105, //0x5
+  0x1401,
+  0x0100, //0x0
+  0x1C01,
+  0x0105, //0x5
+  0x4000,
+  0x010B, //0xb
+  0x24C3, 0x2502};
+
+#define SI_I2C_ADDRESS   0xD0
+#define SI_I2C_BASE_ADDR 0x41600000
+#define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
+#define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
+#define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
+#define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
+#define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
+#define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
+
+void SiI2cWrite(u8 address,u8 data){
+  Xil_Out32(I2C_RESET    , 0xA);
+  Xil_Out32(I2C_CONTROL  , 0x2);
+  Xil_Out32(I2C_CONTROL  , 0xC);
+  Xil_Out32(I2C_TX_FIFO  , 0x100 | ((u32)SI_I2C_ADDRESS));
+  Xil_Out32(I2C_TX_FIFO  , (u32) address);
+  Xil_Out32(I2C_TX_FIFO  , 0x200 | ((u32)data));
+  Xil_Out32(I2C_CONTROL  , 0xD);
+  u16 tries = 20000;
+  //Time out of something isn't working
+  //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
+  while((Xil_In32(I2C_STATUS) & 0x4)){
+    tries--;
+    if(!tries){
+      fsbl_printf(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
+      break;
+    }
+  }
+  //  usleep(50);
+  Xil_Out32(I2C_CONTROL, 0x0);
+
+  //  fsbl_printf(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
+}
+
+
+void ProgramSI(){
+  /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
+  fsbl_printf(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  fsbl_printf(DEBUG_GENERAL,"========================================\r\n");
+  fsbl_printf(DEBUG_GENERAL,"Programming Si-5344 \r\n");
+  
+  Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
+  u16 iWrite=0;
+  for(; iWrite < 5 ;iWrite++){
+    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  }
+  usleep(400000);
+  for(; iWrite < (sizeof(ConfigData)/sizeof(u16));iWrite++){
+    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  }
+  fsbl_printf(DEBUG_GENERAL,"Waiting for lock\r\n");
+  
+  Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
+  usleep(1000000); //wait 1s
+  
+  u16 tries = 20000;
+  //Waitinf for lock
+  while((Xil_In32(SI_CONFIG_BASE_ADDR) & 0x60)){
+    usleep(1000);
+    tries--;
+    if(!tries){
+      fsbl_printf(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
+      break;
+    }
+  }
+  
+  fsbl_printf(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  fsbl_printf(DEBUG_GENERAL,"========================================\r\n");
+  fsbl_printf(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  
+}
-- 
1.8.3.1


From 5bd36799d8c8466b506e8b3e555dd8321c7ab825 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 1 Dec 2020 14:07:47 -0500
Subject: [PATCH 02/15] fixes

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c     |  4 +---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 32 ++++++++-------------------
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h | 21 ++++++++++++++++++
 3 files changed, 31 insertions(+), 26 deletions(-)
 create mode 100644 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
index 510b838..56799bc 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_hooks.c
@@ -51,6 +51,7 @@
 #include "xfsbl_hw.h"
 #include "xfsbl_hooks.h"
 #include "psu_init.h"
+#include "xfsbl_programSI.h"
 /************************** Constant Definitions *****************************/
 
 /**************************** Type Definitions *******************************/
@@ -86,9 +87,6 @@ u32 XFsbl_HookAfterBSDownload(void )
 }
 #endif
 
-//hacky I know, but I'm just going to include it directly here
-//update address in xfsbl_programSI.c
-#include "xfsbl_programSI.c"
 u32 XFsbl_HookBeforeHandoff(u32 EarlyHandoff)
 {
 	u32 Status = XFSBL_SUCCESS;
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 4d743b8..9590ca0 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,19 +1,13 @@
-#define SI_CONFIG_BASE_ADDR 0xA1600000
+#include "xfsbl_programSI.h"
 
-u32 FsblHookAfterBitstreamDload(void)
-{
-	u32 Status;
-
-	Status = XST_SUCCESS;
-
-	/*
-	 * User logic to be added here.
-	 * Errors to be stored in the status variable and returned
-	 */
-	fsbl_printf(DEBUG_INFO, "In FsblHookAfterBitstreamDload function \r\n");
-
-	return (Status);
-}
+#define SI_I2C_ADDRESS   0xD0
+#define SI_I2C_BASE_ADDR 0x41600000
+#define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
+#define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
+#define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
+#define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
+#define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
+#define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
 
 u16 ConfigData[] = {
   0x010B, //0xb
@@ -98,14 +92,6 @@ u16 ConfigData[] = {
   0x010B, //0xb
   0x24C3, 0x2502};
 
-#define SI_I2C_ADDRESS   0xD0
-#define SI_I2C_BASE_ADDR 0x41600000
-#define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
-#define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
-#define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
-#define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
-#define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
-#define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
 
 void SiI2cWrite(u8 address,u8 data){
   Xil_Out32(I2C_RESET    , 0xA);
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
new file mode 100644
index 0000000..6542020
--- /dev/null
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -0,0 +1,21 @@
+#ifndef XFSBL_PROGRAMSI_H
+#define XFSBL_PROGRAMSI_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include "xil_types.h"
+
+#define SI_CONFIG_BASE_ADDR 0xA1600000
+
+void SiI2cWrite(u8 address,u8 data);
+
+
+void ProgramSI();
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif  /* XFSBL_PROGRAMSI_H */
-- 
1.8.3.1


From fb068c7e2547939f123a9de4faa639b4dfb16148 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 1 Dec 2020 14:26:26 -0500
Subject: [PATCH 03/15] adding missed includes

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
index 6542020..0dc6129 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -5,6 +5,7 @@
 extern "C" {
 #endif
 
+#include "xfsbl_hw.h"
 #include "xil_types.h"
 
 #define SI_CONFIG_BASE_ADDR 0xA1600000
-- 
1.8.3.1


From 1d15ee6d6d1d8c3288afad127bec80ca1fc7946d Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 1 Dec 2020 14:38:04 -0500
Subject: [PATCH 04/15] fixed printf

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 9590ca0..608ac19 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -1,5 +1,7 @@
 #include "xfsbl_programSI.h"
 
+#define PRINTF XFsbl_Printf
+
 #define SI_I2C_ADDRESS   0xD0
 #define SI_I2C_BASE_ADDR 0x41600000
 #define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
@@ -107,22 +109,22 @@ void SiI2cWrite(u8 address,u8 data){
   while((Xil_In32(I2C_STATUS) & 0x4)){
     tries--;
     if(!tries){
-      fsbl_printf(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
+      PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
       break;
     }
   }
   //  usleep(50);
   Xil_Out32(I2C_CONTROL, 0x0);
 
-  //  fsbl_printf(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
+  //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
 }
 
 
 void ProgramSI(){
   /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
-  fsbl_printf(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
-  fsbl_printf(DEBUG_GENERAL,"========================================\r\n");
-  fsbl_printf(DEBUG_GENERAL,"Programming Si-5344 \r\n");
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
   u16 iWrite=0;
@@ -135,7 +137,7 @@ void ProgramSI(){
     SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
 	       (u8)((ConfigData[iWrite]     ) & 0xFF));
   }
-  fsbl_printf(DEBUG_GENERAL,"Waiting for lock\r\n");
+  PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
   usleep(1000000); //wait 1s
@@ -146,13 +148,13 @@ void ProgramSI(){
     usleep(1000);
     tries--;
     if(!tries){
-      fsbl_printf(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
+      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
       break;
     }
   }
   
-  fsbl_printf(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
-  fsbl_printf(DEBUG_GENERAL,"========================================\r\n");
-  fsbl_printf(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   
 }
-- 
1.8.3.1


From de5b5dd90d59e4624f2d67eb16be8d6898d04f2f Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 1 Dec 2020 15:32:45 -0500
Subject: [PATCH 05/15] fixed address

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 608ac19..589ed6f 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -3,7 +3,6 @@
 #define PRINTF XFsbl_Printf
 
 #define SI_I2C_ADDRESS   0xD0
-#define SI_I2C_BASE_ADDR 0x41600000
 #define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
 #define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
 #define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
-- 
1.8.3.1


From 0ba8a161c8595181d99fe242023afc8b8a4b9948 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 1 Dec 2020 16:38:34 -0500
Subject: [PATCH 06/15] forgot this needs the SERV and the SI_I2C AXI addresses

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
index 0dc6129..0013816 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
@@ -7,9 +7,10 @@ extern "C" {
 
 #include "xfsbl_hw.h"
 #include "xil_types.h"
-
-#define SI_CONFIG_BASE_ADDR 0xA1600000
-
+  /*serv base*/
+#define SI_CONFIG_BASE_ADDR 0xA3C20000
+  /*i2c base*/
+#define SI_I2C_BASE_ADDR 0xA1600000
 void SiI2cWrite(u8 address,u8 data);
 
 
-- 
1.8.3.1


From 8b021edc3e29e969a123d2ef85be21637683b058 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Wed, 2 Dec 2020 13:58:19 -0500
Subject: [PATCH 07/15] preprint

---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
index 589ed6f..797c9d2 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
@@ -10,6 +10,15 @@
 #define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
 #define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
 
+/*
+I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + 0x118))
+I2C_CONTROL      (SI_I2C_BASE_ADDR + 0x100))
+I2C_STATUS       (SI_I2C_BASE_ADDR + 0x104))
+I2C_RX_FIFO      (SI_I2C_BASE_ADDR + 0x10C))
+I2C_TX_FIFO      (SI_I2C_BASE_ADDR + 0x108))
+I2C_RESET        (SI_I2C_BASE_ADDR + 0x040))
+*/
+
 u16 ConfigData[] = {
   0x010B, //0xb
   0x24C0, 0x2500,
@@ -124,6 +133,7 @@ void ProgramSI(){
   PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
   PRINTF(DEBUG_GENERAL,"========================================\r\n");
   PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
   u16 iWrite=0;
-- 
1.8.3.1


From 4ea709099e1eeaaefaee9746b673a69aaab424f0 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 7 Dec 2020 09:31:37 -0500
Subject: [PATCH 08/15] Added the SI programming code from the USP to the 7
 series as well

---
 lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c     |  2 ++
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c |  1 +
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h | 23 +++++++++++++++++++++++
 3 files changed, 26 insertions(+)
 create mode 120000 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
 create mode 100644 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h

diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
index c09e41a..4fa2d12 100644
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
@@ -50,6 +50,7 @@
 #include "fsbl.h"
 #include "xstatus.h"
 #include "fsbl_hooks.h"
+#include "fsbl_programSI.h"
 
 /************************** Variable Definitions *****************************/
 
@@ -134,6 +135,7 @@ u32 FsblHookBeforeHandoff(void)
 	 * Errors to be stored in the status variable and returned
 	 */
 	fsbl_printf(DEBUG_INFO,"In FsblHookBeforeHandoff function \r\n");
+	ProgramSI();
 
 	return (Status);
 }
diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
new file mode 120000
index 0000000..30e73b0
--- /dev/null
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
@@ -0,0 +1 @@
+../../zynqmp_fsbl/src/xfsbl_programSI.c
\ No newline at end of file
diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
new file mode 100644
index 0000000..a53235c
--- /dev/null
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
@@ -0,0 +1,23 @@
+#ifndef FSBL_PROGRAMSI_H
+#define FSBL_PROGRAMSI_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include "fsbl_hw.h"
+#include "xil_types.h"
+  /*serv base*/
+#define SI_CONFIG_BASE_ADDR 0x43C20000
+  /*i2c base*/
+#define SI_I2C_BASE_ADDR 0x41600000
+void SiI2cWrite(u8 address,u8 data);
+
+
+void ProgramSI();
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif  /* XFSBL_PROGRAMSI_H */
-- 
1.8.3.1


From 9fdaba74b825106c1980737ed130b3cf39ce2995 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 7 Dec 2020 14:08:22 -0500
Subject: [PATCH 09/15] slight refactor of 7 and mp shared SI code

---
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c    |   1 -
 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h    |  23 ----
 lib/sw_apps/zynq_fsbl/src/programSI.c         |   1 +
 lib/sw_apps/zynq_fsbl/src/programSI.h         |  26 ++++
 lib/sw_apps/zynqmp_fsbl/src/programSI.c       | 169 ++++++++++++++++++++++++++
 lib/sw_apps/zynqmp_fsbl/src/programSI.h       |  26 ++++
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c | 169 --------------------------
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h |  23 ----
 8 files changed, 222 insertions(+), 216 deletions(-)
 delete mode 120000 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
 delete mode 100644 lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
 create mode 120000 lib/sw_apps/zynq_fsbl/src/programSI.c
 create mode 100644 lib/sw_apps/zynq_fsbl/src/programSI.h
 create mode 100644 lib/sw_apps/zynqmp_fsbl/src/programSI.c
 create mode 100644 lib/sw_apps/zynqmp_fsbl/src/programSI.h
 delete mode 100644 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
 delete mode 100644 lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h

diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
deleted file mode 120000
index 30e73b0..0000000
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.c
+++ /dev/null
@@ -1 +0,0 @@
-../../zynqmp_fsbl/src/xfsbl_programSI.c
\ No newline at end of file
diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h b/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
deleted file mode 100644
index a53235c..0000000
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_programSI.h
+++ /dev/null
@@ -1,23 +0,0 @@
-#ifndef FSBL_PROGRAMSI_H
-#define FSBL_PROGRAMSI_H
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#include "fsbl_hw.h"
-#include "xil_types.h"
-  /*serv base*/
-#define SI_CONFIG_BASE_ADDR 0x43C20000
-  /*i2c base*/
-#define SI_I2C_BASE_ADDR 0x41600000
-void SiI2cWrite(u8 address,u8 data);
-
-
-void ProgramSI();
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif  /* XFSBL_PROGRAMSI_H */
diff --git a/lib/sw_apps/zynq_fsbl/src/programSI.c b/lib/sw_apps/zynq_fsbl/src/programSI.c
new file mode 120000
index 0000000..0fbd35d
--- /dev/null
+++ b/lib/sw_apps/zynq_fsbl/src/programSI.c
@@ -0,0 +1 @@
+../../zynqmp_fsbl/src/programSI.c
\ No newline at end of file
diff --git a/lib/sw_apps/zynq_fsbl/src/programSI.h b/lib/sw_apps/zynq_fsbl/src/programSI.h
new file mode 100644
index 0000000..a5b58ce
--- /dev/null
+++ b/lib/sw_apps/zynq_fsbl/src/programSI.h
@@ -0,0 +1,26 @@
+#ifndef FSBL_PROGRAMSI_H
+#define FSBL_PROGRAMSI_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include "fsbl_hw.h"
+#include "xil_types.h"
+  /*serv base*/
+#define SI_CONFIG_BASE_ADDR 0x43C20000
+  /*i2c base*/
+#define SI_I2C_BASE_ADDR 0x41600000
+
+#define PRINTF XFsbl_Printf
+
+void SiI2cWrite(u8 address,u8 data);
+
+
+void ProgramSI();
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif  /* XFSBL_PROGRAMSI_H */
diff --git a/lib/sw_apps/zynqmp_fsbl/src/programSI.c b/lib/sw_apps/zynqmp_fsbl/src/programSI.c
new file mode 100644
index 0000000..70eae85
--- /dev/null
+++ b/lib/sw_apps/zynqmp_fsbl/src/programSI.c
@@ -0,0 +1,169 @@
+#include "programSI.h"
+
+
+
+#define SI_I2C_ADDRESS   0xD0
+#define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
+#define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
+#define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
+#define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
+#define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
+#define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
+
+/*
+I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + 0x118))
+I2C_CONTROL      (SI_I2C_BASE_ADDR + 0x100))
+I2C_STATUS       (SI_I2C_BASE_ADDR + 0x104))
+I2C_RX_FIFO      (SI_I2C_BASE_ADDR + 0x10C))
+I2C_TX_FIFO      (SI_I2C_BASE_ADDR + 0x108))
+I2C_RESET        (SI_I2C_BASE_ADDR + 0x040))
+*/
+
+u16 ConfigData[] = {
+  0x010B, //0xb
+  0x24C0, 0x2500,
+  0x0105, //0x5
+  0x4001,
+  0x0100, //0x0
+  0x0600, 0x0700, 0x0800, 0x0B68, 0x1602, 0x17DC, 0x18EE, 0x19DD,
+  0x1ADF, 0x2B02, 0x2C01, 0x2D01, 0x2E38, 0x2F00, 0x3000, 0x3100,
+  0x3200, 0x3300, 0x3400, 0x3500, 0x3638, 0x3700, 0x3800, 0x3900,
+  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3F11, 0x4004, 0x410D, 0x4200,
+  0x4300, 0x4400, 0x450C, 0x4632, 0x4700, 0x4800, 0x4900, 0x4A32,
+  0x4B00, 0x4C00, 0x4D00, 0x4E05, 0x4F00, 0x500F, 0x5103, 0x5200,
+  0x5300, 0x5400, 0x5503, 0x5600, 0x5700, 0x5800, 0x5901, 0x5AAA,
+  0x5BAA, 0x5C0A, 0x5D01, 0x5E00, 0x5F00, 0x6000, 0x6100, 0x6200,
+  0x6300, 0x6400, 0x6500, 0x6600, 0x6700, 0x6800, 0x6900, 0x9202,
+  0x93A0, 0x9500, 0x9680, 0x9860, 0x9A02, 0x9B60, 0x9D08, 0x9E40,
+  0xA020, 0xA200, 0xA9A7, 0xAA61, 0xAB00, 0xAC00, 0xE521, 0xEA0A,
+  0xEB60, 0xEC00, 0xED00,
+  0x0101, //0x1
+  0x0201, 0x1202, 0x1309, 0x1433, 0x1508, 0x1702, 0x1809, 0x1933,
+  0x1A08, 0x2602, 0x2709, 0x2833, 0x2909, 0x2B02, 0x2C09, 0x2D33,
+  0x2E0A, 0x3F00, 0x4000, 0x4140, 0x42FF,
+  0x0102, //0x2
+  0x0600, 0x0832, 0x0900, 0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E01,
+  0x0F00, 0x1000, 0x1100, 0x1200, 0x1300, 0x1400, 0x1500, 0x1600,
+  0x1700, 0x1800, 0x1900, 0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00,
+  0x1F00, 0x2000, 0x2100, 0x2200, 0x2300, 0x2400, 0x2500, 0x2600,
+  0x2700, 0x2800, 0x2900, 0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00,
+  0x2F00, 0x310B, 0x320B, 0x330B, 0x340B, 0x3500, 0x3600, 0x3700,
+  0x38C0, 0x39DA, 0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3EC0, 0x5003,
+  0x5100, 0x5200, 0x5304, 0x5400, 0x5500, 0x5C02, 0x5D00, 0x5E00,
+  0x5F02, 0x6000, 0x6100, 0x6B41, 0x6C50, 0x6D4F, 0x6E4C, 0x6F4C,
+  0x704F, 0x7153, 0x724D, 0x8A00, 0x8B00, 0x8C00, 0x8D00, 0x8E00,
+  0x8F00, 0x9000, 0x9100, 0x94B0, 0x9602, 0x9702, 0x9902, 0x9DFA,
+  0x9E01, 0x9F00, 0xA9CC, 0xAA04, 0xAB00, 0xB7FF, 0x0103, 0x0200,
+  0x0300, 0x0400, 0x0500, 0x0607, 0x0700, 0x0800, 0x0900, 0x0A00,
+  0x0B80, 0x0C00, 0x0D00, 0x0E00, 0x0FEC, 0x1060, 0x1121, 0x1200,
+  0x1300, 0x14B8, 0x15C6, 0x1692, 0x1700, 0x1800, 0x19C0, 0x1A49,
+  0x1B6E, 0x1C0A, 0x1D00, 0x1E00, 0x1F8B, 0x2077, 0x21B7, 0x2200,
+  0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900, 0x2A00,
+  0x2B00, 0x2C00, 0x2D00, 0x3800, 0x391F, 0x3B00, 0x3C00, 0x3D00,
+  0x3E00, 0x3F00, 0x4000, 0x4100, 0x4200, 0x4300, 0x4400, 0x4500,
+  0x4600, 0x4700, 0x4800, 0x4900, 0x4A00, 0x4B00, 0x4C00, 0x4D00,
+  0x4E00, 0x4F00, 0x5000, 0x5100, 0x5200, 0x5900, 0x5A00, 0x5B00,
+  0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000,
+  0x0104, //0x4
+  0x8700,
+  0x0105, //0x5
+  0x0813, 0x0922, 0x0A0C, 0x0B0B, 0x0C07, 0x0D3F, 0x0E16, 0x0F2A, 
+  0x1009, 0x1108, 0x1207, 0x133F, 0x1500, 0x1600, 0x1700, 0x1800,
+  0x19BC, 0x1A02, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F80, 0x212B,
+  0x2A01, 0x2B01, 0x2C87, 0x2D03, 0x2E19, 0x2F19, 0x3100, 0x3242,
+  0x3303, 0x3400, 0x3500, 0x3604, 0x3700, 0x3800, 0x3900, 0x3A02,
+  0x3B03, 0x3C00, 0x3D11, 0x3E06, 0x890D, 0x8A00, 0x9BFA, 0x9D13,
+  0x9E24, 0x9F0C, 0xA00B, 0xA107, 0xA23F, 0xA603,
+  0x0108, //0x8
+  0x0235, 0x0305, 0x0400, 0x0500, 0x0600, 0x0700, 0x0800, 0x0900,
+  0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E00, 0x0F00, 0x1000, 0x1100,
+  0x1200, 0x1300, 0x1400, 0x1500, 0x1600, 0x1700, 0x1800, 0x1900,
+  0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F00, 0x2000, 0x2100,
+  0x2200, 0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900,
+  0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00, 0x2F00, 0x3000, 0x3100,
+  0x3200, 0x3300, 0x3400, 0x3500, 0x3600, 0x3700, 0x3800, 0x3900,
+  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3E00, 0x3F00, 0x4000, 0x4100,
+  0x4200, 0x4300, 0x4400, 0x4500, 0x4600, 0x4700, 0x4800, 0x4900,
+  0x4A00, 0x4B00, 0x4C00, 0x4D00, 0x4E00, 0x4F00, 0x5000, 0x5100,
+  0x5200, 0x5300, 0x5400, 0x5500, 0x5600, 0x5700, 0x5800, 0x5900,
+  0x5A00, 0x5B00, 0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000, 0x6100,
+  0x0109, //0x9
+  0x0E02, 0x4300, 0x4901, 0x4A01, 0x4E49, 0x4F02, 0x5E00,
+  0x010A, //0xA
+  0x0200, 0x0307, 0x0401, 0x0507, 0x1400, 0x1A00, 0x2000, 0x2600,
+  0x010B, //0xb
+  0x442F, 0x4600, 0x470E, 0x480E, 0x4A08, 0x570E, 0x5801,
+  0x0105, //0x5
+  0x1401,
+  0x0100, //0x0
+  0x1C01,
+  0x0105, //0x5
+  0x4000,
+  0x010B, //0xb
+  0x24C3, 0x2502};
+
+
+void SiI2cWrite(u8 address,u8 data){
+  Xil_Out32(I2C_RESET    , 0xA);
+  Xil_Out32(I2C_CONTROL  , 0x2);
+  Xil_Out32(I2C_CONTROL  , 0xC);
+  Xil_Out32(I2C_TX_FIFO  , 0x100 | ((u32)SI_I2C_ADDRESS));
+  Xil_Out32(I2C_TX_FIFO  , (u32) address);
+  Xil_Out32(I2C_TX_FIFO  , 0x200 | ((u32)data));
+  Xil_Out32(I2C_CONTROL  , 0xD);
+  u16 tries = 20000;
+  //Time out of something isn't working
+  //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
+  while((Xil_In32(I2C_STATUS) & 0x4)){
+    tries--;
+    if(!tries){
+      PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
+      break;
+    }
+  }
+  //  usleep(50);
+  Xil_Out32(I2C_CONTROL, 0x0);
+
+  //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
+}
+
+
+void ProgramSI(){
+  /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  
+  Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
+  u16 iWrite=0;
+  for(; iWrite < 5 ;iWrite++){
+    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  }
+  usleep(400000);
+  for(; iWrite < (sizeof(ConfigData)/sizeof(u16));iWrite++){
+    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
+	       (u8)((ConfigData[iWrite]     ) & 0xFF));
+  }
+  PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
+  
+  Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
+  usleep(1000000); //wait 1s
+  
+  u16 tries = 20000;
+  //Waitinf for lock
+  while((Xil_In32(SI_CONFIG_BASE_ADDR) & 0x60)){
+    usleep(1000);
+    tries--;
+    if(!tries){
+      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
+      break;
+    }
+  }
+  
+  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
+  PRINTF(DEBUG_GENERAL,"========================================\r\n");
+  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
+  
+}
diff --git a/lib/sw_apps/zynqmp_fsbl/src/programSI.h b/lib/sw_apps/zynqmp_fsbl/src/programSI.h
new file mode 100644
index 0000000..dbfddd3
--- /dev/null
+++ b/lib/sw_apps/zynqmp_fsbl/src/programSI.h
@@ -0,0 +1,26 @@
+#ifndef XFSBL_PROGRAMSI_H
+#define XFSBL_PROGRAMSI_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include "xfsbl_hw.h"
+#include "xil_types.h"
+  /*serv base*/
+#define SI_CONFIG_BASE_ADDR 0xA3C20000
+  /*i2c base*/
+#define SI_I2C_BASE_ADDR 0xA1600000
+
+#define PRINTF XFsbl_Printf
+
+void SiI2cWrite(u8 address,u8 data);
+
+
+void ProgramSI();
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif  /* XFSBL_PROGRAMSI_H */
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
deleted file mode 100644
index 797c9d2..0000000
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.c
+++ /dev/null
@@ -1,169 +0,0 @@
-#include "xfsbl_programSI.h"
-
-#define PRINTF XFsbl_Printf
-
-#define SI_I2C_ADDRESS   0xD0
-#define I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + (sizeof(u32)*0x46))
-#define I2C_CONTROL      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x40))
-#define I2C_STATUS       (SI_I2C_BASE_ADDR + (sizeof(u32)*0x41))
-#define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
-#define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
-#define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
-
-/*
-I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + 0x118))
-I2C_CONTROL      (SI_I2C_BASE_ADDR + 0x100))
-I2C_STATUS       (SI_I2C_BASE_ADDR + 0x104))
-I2C_RX_FIFO      (SI_I2C_BASE_ADDR + 0x10C))
-I2C_TX_FIFO      (SI_I2C_BASE_ADDR + 0x108))
-I2C_RESET        (SI_I2C_BASE_ADDR + 0x040))
-*/
-
-u16 ConfigData[] = {
-  0x010B, //0xb
-  0x24C0, 0x2500,
-  0x0105, //0x5
-  0x4001,
-  0x0100, //0x0
-  0x0600, 0x0700, 0x0800, 0x0B68, 0x1602, 0x17DC, 0x18EE, 0x19DD,
-  0x1ADF, 0x2B02, 0x2C01, 0x2D01, 0x2E38, 0x2F00, 0x3000, 0x3100,
-  0x3200, 0x3300, 0x3400, 0x3500, 0x3638, 0x3700, 0x3800, 0x3900,
-  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3F11, 0x4004, 0x410D, 0x4200,
-  0x4300, 0x4400, 0x450C, 0x4632, 0x4700, 0x4800, 0x4900, 0x4A32,
-  0x4B00, 0x4C00, 0x4D00, 0x4E05, 0x4F00, 0x500F, 0x5103, 0x5200,
-  0x5300, 0x5400, 0x5503, 0x5600, 0x5700, 0x5800, 0x5901, 0x5AAA,
-  0x5BAA, 0x5C0A, 0x5D01, 0x5E00, 0x5F00, 0x6000, 0x6100, 0x6200,
-  0x6300, 0x6400, 0x6500, 0x6600, 0x6700, 0x6800, 0x6900, 0x9202,
-  0x93A0, 0x9500, 0x9680, 0x9860, 0x9A02, 0x9B60, 0x9D08, 0x9E40,
-  0xA020, 0xA200, 0xA9A7, 0xAA61, 0xAB00, 0xAC00, 0xE521, 0xEA0A,
-  0xEB60, 0xEC00, 0xED00,
-  0x0101, //0x1
-  0x0201, 0x1202, 0x1309, 0x1433, 0x1508, 0x1702, 0x1809, 0x1933,
-  0x1A08, 0x2602, 0x2709, 0x2833, 0x2909, 0x2B02, 0x2C09, 0x2D33,
-  0x2E0A, 0x3F00, 0x4000, 0x4140, 0x42FF,
-  0x0102, //0x2
-  0x0600, 0x0832, 0x0900, 0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E01,
-  0x0F00, 0x1000, 0x1100, 0x1200, 0x1300, 0x1400, 0x1500, 0x1600,
-  0x1700, 0x1800, 0x1900, 0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00,
-  0x1F00, 0x2000, 0x2100, 0x2200, 0x2300, 0x2400, 0x2500, 0x2600,
-  0x2700, 0x2800, 0x2900, 0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00,
-  0x2F00, 0x310B, 0x320B, 0x330B, 0x340B, 0x3500, 0x3600, 0x3700,
-  0x38C0, 0x39DA, 0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3EC0, 0x5003,
-  0x5100, 0x5200, 0x5304, 0x5400, 0x5500, 0x5C02, 0x5D00, 0x5E00,
-  0x5F02, 0x6000, 0x6100, 0x6B41, 0x6C50, 0x6D4F, 0x6E4C, 0x6F4C,
-  0x704F, 0x7153, 0x724D, 0x8A00, 0x8B00, 0x8C00, 0x8D00, 0x8E00,
-  0x8F00, 0x9000, 0x9100, 0x94B0, 0x9602, 0x9702, 0x9902, 0x9DFA,
-  0x9E01, 0x9F00, 0xA9CC, 0xAA04, 0xAB00, 0xB7FF, 0x0103, 0x0200,
-  0x0300, 0x0400, 0x0500, 0x0607, 0x0700, 0x0800, 0x0900, 0x0A00,
-  0x0B80, 0x0C00, 0x0D00, 0x0E00, 0x0FEC, 0x1060, 0x1121, 0x1200,
-  0x1300, 0x14B8, 0x15C6, 0x1692, 0x1700, 0x1800, 0x19C0, 0x1A49,
-  0x1B6E, 0x1C0A, 0x1D00, 0x1E00, 0x1F8B, 0x2077, 0x21B7, 0x2200,
-  0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900, 0x2A00,
-  0x2B00, 0x2C00, 0x2D00, 0x3800, 0x391F, 0x3B00, 0x3C00, 0x3D00,
-  0x3E00, 0x3F00, 0x4000, 0x4100, 0x4200, 0x4300, 0x4400, 0x4500,
-  0x4600, 0x4700, 0x4800, 0x4900, 0x4A00, 0x4B00, 0x4C00, 0x4D00,
-  0x4E00, 0x4F00, 0x5000, 0x5100, 0x5200, 0x5900, 0x5A00, 0x5B00,
-  0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000,
-  0x0104, //0x4
-  0x8700,
-  0x0105, //0x5
-  0x0813, 0x0922, 0x0A0C, 0x0B0B, 0x0C07, 0x0D3F, 0x0E16, 0x0F2A, 
-  0x1009, 0x1108, 0x1207, 0x133F, 0x1500, 0x1600, 0x1700, 0x1800,
-  0x19BC, 0x1A02, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F80, 0x212B,
-  0x2A01, 0x2B01, 0x2C87, 0x2D03, 0x2E19, 0x2F19, 0x3100, 0x3242,
-  0x3303, 0x3400, 0x3500, 0x3604, 0x3700, 0x3800, 0x3900, 0x3A02,
-  0x3B03, 0x3C00, 0x3D11, 0x3E06, 0x890D, 0x8A00, 0x9BFA, 0x9D13,
-  0x9E24, 0x9F0C, 0xA00B, 0xA107, 0xA23F, 0xA603,
-  0x0108, //0x8
-  0x0235, 0x0305, 0x0400, 0x0500, 0x0600, 0x0700, 0x0800, 0x0900,
-  0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E00, 0x0F00, 0x1000, 0x1100,
-  0x1200, 0x1300, 0x1400, 0x1500, 0x1600, 0x1700, 0x1800, 0x1900,
-  0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F00, 0x2000, 0x2100,
-  0x2200, 0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900,
-  0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00, 0x2F00, 0x3000, 0x3100,
-  0x3200, 0x3300, 0x3400, 0x3500, 0x3600, 0x3700, 0x3800, 0x3900,
-  0x3A00, 0x3B00, 0x3C00, 0x3D00, 0x3E00, 0x3F00, 0x4000, 0x4100,
-  0x4200, 0x4300, 0x4400, 0x4500, 0x4600, 0x4700, 0x4800, 0x4900,
-  0x4A00, 0x4B00, 0x4C00, 0x4D00, 0x4E00, 0x4F00, 0x5000, 0x5100,
-  0x5200, 0x5300, 0x5400, 0x5500, 0x5600, 0x5700, 0x5800, 0x5900,
-  0x5A00, 0x5B00, 0x5C00, 0x5D00, 0x5E00, 0x5F00, 0x6000, 0x6100,
-  0x0109, //0x9
-  0x0E02, 0x4300, 0x4901, 0x4A01, 0x4E49, 0x4F02, 0x5E00,
-  0x010A, //0xA
-  0x0200, 0x0307, 0x0401, 0x0507, 0x1400, 0x1A00, 0x2000, 0x2600,
-  0x010B, //0xb
-  0x442F, 0x4600, 0x470E, 0x480E, 0x4A08, 0x570E, 0x5801,
-  0x0105, //0x5
-  0x1401,
-  0x0100, //0x0
-  0x1C01,
-  0x0105, //0x5
-  0x4000,
-  0x010B, //0xb
-  0x24C3, 0x2502};
-
-
-void SiI2cWrite(u8 address,u8 data){
-  Xil_Out32(I2C_RESET    , 0xA);
-  Xil_Out32(I2C_CONTROL  , 0x2);
-  Xil_Out32(I2C_CONTROL  , 0xC);
-  Xil_Out32(I2C_TX_FIFO  , 0x100 | ((u32)SI_I2C_ADDRESS));
-  Xil_Out32(I2C_TX_FIFO  , (u32) address);
-  Xil_Out32(I2C_TX_FIFO  , 0x200 | ((u32)data));
-  Xil_Out32(I2C_CONTROL  , 0xD);
-  u16 tries = 20000;
-  //Time out of something isn't working
-  //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
-  while((Xil_In32(I2C_STATUS) & 0x4)){
-    tries--;
-    if(!tries){
-      PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
-      break;
-    }
-  }
-  //  usleep(50);
-  Xil_Out32(I2C_CONTROL, 0x0);
-
-  //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
-}
-
-
-void ProgramSI(){
-  /*https://www.beyond-circuits.com/wordpress/2018/05/updating-the-first-stage-bootloader-in-petalinux-v2017-4/*/
-  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
-  PRINTF(DEBUG_GENERAL,"========================================\r\n");
-  PRINTF(DEBUG_GENERAL,"Programming Si-5344 \r\n");
-  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
-  
-  Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
-  u16 iWrite=0;
-  for(; iWrite < 5 ;iWrite++){
-    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
-	       (u8)((ConfigData[iWrite]     ) & 0xFF));
-  }
-  usleep(400000);
-  for(; iWrite < (sizeof(ConfigData)/sizeof(u16));iWrite++){
-    SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
-	       (u8)((ConfigData[iWrite]     ) & 0xFF));
-  }
-  PRINTF(DEBUG_GENERAL,"Waiting for lock\r\n");
-  
-  Xil_Out32(SI_CONFIG_BASE_ADDR,0x3);
-  usleep(1000000); //wait 1s
-  
-  u16 tries = 20000;
-  //Waitinf for lock
-  while((Xil_In32(SI_CONFIG_BASE_ADDR) & 0x60)){
-    usleep(1000);
-    tries--;
-    if(!tries){
-      PRINTF(DEBUG_GENERAL,"Warning: Timeout waiting for Si lock\r\n");
-      break;
-    }
-  }
-  
-  PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
-  PRINTF(DEBUG_GENERAL,"========================================\r\n");
-  PRINTF(DEBUG_GENERAL,"\r\n\r\n\r\n\r\n\r\n");
-  
-}
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
deleted file mode 100644
index 0013816..0000000
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_programSI.h
+++ /dev/null
@@ -1,23 +0,0 @@
-#ifndef XFSBL_PROGRAMSI_H
-#define XFSBL_PROGRAMSI_H
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#include "xfsbl_hw.h"
-#include "xil_types.h"
-  /*serv base*/
-#define SI_CONFIG_BASE_ADDR 0xA3C20000
-  /*i2c base*/
-#define SI_I2C_BASE_ADDR 0xA1600000
-void SiI2cWrite(u8 address,u8 data);
-
-
-void ProgramSI();
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif  /* XFSBL_PROGRAMSI_H */
-- 
1.8.3.1


From ec5d9034c32ce0a36423157a07b6fe24bd4f3aa8 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 7 Dec 2020 14:27:28 -0500
Subject: [PATCH 10/15] fixes

---
 lib/sw_apps/zynq_fsbl/src/programSI.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynq_fsbl/src/programSI.h b/lib/sw_apps/zynq_fsbl/src/programSI.h
index a5b58ce..9945e8f 100644
--- a/lib/sw_apps/zynq_fsbl/src/programSI.h
+++ b/lib/sw_apps/zynq_fsbl/src/programSI.h
@@ -5,7 +5,7 @@
 extern "C" {
 #endif
 
-#include "fsbl_hw.h"
+#include "fsbl.h"
 #include "xil_types.h"
   /*serv base*/
 #define SI_CONFIG_BASE_ADDR 0x43C20000
-- 
1.8.3.1


From 43700476d431f218533486e8d8957e3ed579ecc1 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 7 Dec 2020 14:34:36 -0500
Subject: [PATCH 11/15] missed header

---
 lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
index 4fa2d12..aeb4b5e 100644
--- a/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
+++ b/lib/sw_apps/zynq_fsbl/src/fsbl_hooks.c
@@ -50,7 +50,7 @@
 #include "fsbl.h"
 #include "xstatus.h"
 #include "fsbl_hooks.h"
-#include "fsbl_programSI.h"
+#include "programSI.h"
 
 /************************** Variable Definitions *****************************/
 
-- 
1.8.3.1


From 5cb8292757dc713ff1eb00d1adafcf465c44567e Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Mon, 7 Dec 2020 14:45:21 -0500
Subject: [PATCH 12/15] Fixed 7s printf

---
 lib/sw_apps/zynq_fsbl/src/programSI.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynq_fsbl/src/programSI.h b/lib/sw_apps/zynq_fsbl/src/programSI.h
index 9945e8f..c6f1f48 100644
--- a/lib/sw_apps/zynq_fsbl/src/programSI.h
+++ b/lib/sw_apps/zynq_fsbl/src/programSI.h
@@ -12,7 +12,7 @@ extern "C" {
   /*i2c base*/
 #define SI_I2C_BASE_ADDR 0x41600000
 
-#define PRINTF XFsbl_Printf
+#define PRINTF fsbl_printf
 
 void SiI2cWrite(u8 address,u8 data);
 
-- 
1.8.3.1


From 9f61a968eb7b9bf3b115633cea33414e883e5d45 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 8 Dec 2020 11:21:11 -0500
Subject: [PATCH 13/15] Adding I2C debugging

---
 lib/sw_apps/zynqmp_fsbl/src/programSI.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/programSI.c b/lib/sw_apps/zynqmp_fsbl/src/programSI.c
index 70eae85..6d1ae5b 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/programSI.c
@@ -9,6 +9,8 @@
 #define I2C_RX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x43))
 #define I2C_TX_FIFO      (SI_I2C_BASE_ADDR + (sizeof(u32)*0x42))
 #define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
+#define I2C_THIGH        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x4F))
+#define I2C_TLOW         (SI_I2C_BASE_ADDR + (sizeof(u32)*0x50))
 
 /*
 I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + 0x118))
@@ -136,6 +138,27 @@ void ProgramSI(){
   PRINTF(DEBUG_GENERAL,"Si status:    0x%08X\r\n",Xil_In32(SI_CONFIG_BASE_ADDR));
   
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
+
+  //Dump the i2c registers
+  u16 maxDumpIndex=256;
+  PRINTF(DEBUG_GENERAL,"Dumping SI I2C regs @ 0x%08X to 0x%08X \r\n",SI_I2C_BASE_ADDR,SI_I2C_BASE_ADDR + maxDumpIndex);
+
+  for(u16 iRead=0;iRead < maxDumpIndex;){
+    u16 lineEndIndex = iRead + 16;
+
+    PRINTF(DEBUG_GENERAL,"0x%02X: ",iRead);
+    for(;
+	(iRead < lineEndIndex) && (iRead < maxDumpIndex);
+	iRead+=4){
+      PRINTF(DEBUG_GENERAL,"%08X ",Xil_In32(SI_I2C_BASE_ADDR + iRead));
+    }
+    PRINTF(DEBUG_GENERAL,"\r\n");    
+
+  }
+  //Set the  i2c frequency
+  Xil_Out32(I2C_THIGH,243);
+  Xil_Out32(I2C_TLOW,243);
+
   u16 iWrite=0;
   for(; iWrite < 5 ;iWrite++){
     SiI2cWrite((u8)((ConfigData[iWrite] >> 8) & 0xFF)  ,
-- 
1.8.3.1


From e8e4c03f86a129d5ee43b8ed64b91da33f7aecf7 Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 8 Dec 2020 13:06:33 -0500
Subject: [PATCH 14/15] Updated range and print format of debugging

---
 lib/sw_apps/zynqmp_fsbl/src/programSI.c | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/programSI.c b/lib/sw_apps/zynqmp_fsbl/src/programSI.c
index 6d1ae5b..382e817 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/programSI.c
@@ -116,6 +116,7 @@ void SiI2cWrite(u8 address,u8 data){
   u16 tries = 20000;
   //Time out of something isn't working
   //  while(!(Xil_In32(I2C_STATUS) & 0x80)){
+  usleep(50);
   while((Xil_In32(I2C_STATUS) & 0x4)){
     tries--;
     if(!tries){
@@ -123,7 +124,7 @@ void SiI2cWrite(u8 address,u8 data){
       break;
     }
   }
-  //  usleep(50);
+  usleep(50);
   Xil_Out32(I2C_CONTROL, 0x0);
 
   //  PRINTF(DEBUG_GENERAL,"I2C Write: 0x%02X @ 0x%02X\r\n",data,address);
@@ -140,11 +141,11 @@ void ProgramSI(){
   Xil_Out32(SI_CONFIG_BASE_ADDR,0x2);
 
   //Dump the i2c registers
-  u16 maxDumpIndex=256;
-  PRINTF(DEBUG_GENERAL,"Dumping SI I2C regs @ 0x%08X to 0x%08X \r\n",SI_I2C_BASE_ADDR,SI_I2C_BASE_ADDR + maxDumpIndex);
+  u16 maxDumpIndex=0x148;
+  PRINTF(DEBUG_GENERAL,"Dumping SI I2C regs @ 0x%08X up to 0x%08X \r\n",SI_I2C_BASE_ADDR,SI_I2C_BASE_ADDR + maxDumpIndex);
 
   for(u16 iRead=0;iRead < maxDumpIndex;){
-    u16 lineEndIndex = iRead + 16;
+    u16 lineEndIndex = iRead + 4*8;
 
     PRINTF(DEBUG_GENERAL,"0x%02X: ",iRead);
     for(;
@@ -155,9 +156,6 @@ void ProgramSI(){
     PRINTF(DEBUG_GENERAL,"\r\n");    
 
   }
-  //Set the  i2c frequency
-  Xil_Out32(I2C_THIGH,243);
-  Xil_Out32(I2C_TLOW,243);
 
   u16 iWrite=0;
   for(; iWrite < 5 ;iWrite++){
-- 
1.8.3.1


From 44f1dc890c2403479e27078a708d8e8cd8dc4d8d Mon Sep 17 00:00:00 2001
From: Dan Gastler <dgastler@gmail.com>
Date: Tue, 8 Dec 2020 13:49:53 -0500
Subject: [PATCH 15/15] added irq error print

---
 lib/sw_apps/zynqmp_fsbl/src/programSI.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/programSI.c b/lib/sw_apps/zynqmp_fsbl/src/programSI.c
index 382e817..125d7aa 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/programSI.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/programSI.c
@@ -11,6 +11,7 @@
 #define I2C_RESET        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x10))
 #define I2C_THIGH        (SI_I2C_BASE_ADDR + (sizeof(u32)*0x4F))
 #define I2C_TLOW         (SI_I2C_BASE_ADDR + (sizeof(u32)*0x50))
+#define I2C_IRQ_STATUS   (SI_I2C_BASE_ADDR + (sizeof(u32)*0x08))
 
 /*
 I2C_RX_FIFO_PIRQ (SI_I2C_BASE_ADDR + 0x118))
@@ -123,6 +124,10 @@ void SiI2cWrite(u8 address,u8 data){
       PRINTF(DEBUG_GENERAL,"Timeout on 0x%02X @ 0x%02X\r\n",data,address);
       break;
     }
+    if(Xil_In32(I2C_IRQ_STATUS)&0x2){
+      PRINTF(DEBUG_GENERAL,"Error on 0x%02X @ 0x%02X\r\n",data,address);
+      Xil_Out32(I2C_IRQ_STATUS,0x2);//clear the irq
+    }
   }
   usleep(50);
   Xil_Out32(I2C_CONTROL, 0x0);
-- 
1.8.3.1

